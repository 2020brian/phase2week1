{"version":3,"sources":["data.js","components/Logo.js","components/Sidebar.js","components/Utils.js","components/Account.js","components/MainContent.js","components/Notif.js","components/CreateAccountPage.js","components/TransferPage.js","components/TransactPage.js","components/Dashboard.js","components/LoginPage.js","components/Authenticate.js","App.js","reportWebVitals.js","index.js"],"names":["DATA","email","password","fullname","type","number","balance","isAdmin","Logo","id","className","Sidebar","props","changePage","logoutHandler","SideMenu","onClickHandler","page","icon","text","SideLink","onClick","event","preventDefault","href","formatNumber","toLocaleString","undefined","maximumFractionDigits","trim","parseFloat","replace","findAccount","users","JSON","parse","localStorage","getItem","user","transact","amount","setUsers","multiplier","setItem","stringify","capitalize","str","charAt","toUpperCase","slice","Account","accountNumber","AccountHolder","AccountType","AccountNumber","AccountBalance","MainContent","bankAccounts","map","Notif","style","message","CreateAccountPage","createRandomAccount","Math","floor","random","useState","notif","setNotif","initialBalance","setInitialBalance","initialAccountNumber","setInitialAccountNumber","onSubmit","target","elements","localUsers","alreadyExists","forEach","row","unshift","createNewAccount","value","accountType","htmlFor","autoComplete","name","disabled","onChange","TransferPage","receivers","setReceivers","sender","setSender","receiver","setReceiver","transferAmount","setTransferAmount","senders","newReceivers","console","log","senderSuccess","newUsers","push","e","transfer","TransactPage","accounts","setAccounts","selectedAccount","setSelectedAccount","depositAmount","setDepositAmount","options","account","selectedNumber","class","Dashboard","setPage","changePageHandler","pageName","LoginPage","username","setUsername","setPassword","loginHandler","Authenticate","isLoggedIn","setIsLoggedIn","setIsAdmin","clients","isFound","isAdminLoginSuccess","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50bdf18b.chunk.js","sourcesContent":["const DATA = [\n    {\n        email: \"admin@admin.com\",\n        password: \"abc123\",\n        fullname: \"Admin Account\",\n        type: \"Savings Peso\",\n        number: \"47290539480\",\n        balance: 1000,\n        isAdmin: true\n    },\n    {\n        email: \"jeff@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Jeffrey de Lara\",\n        type: \"Savings Peso\",\n        number: \"47290539481\",\n        balance: 1029300.43,\n        isAdmin: true\n    },\n    {\n        email: \"jeff2@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Juan dela Cruz\",\n        type: \"Savings Peso\",\n        number: \"47290539482\",\n        balance: 392830.22,\n        isAdmin: false\n    },\n    {\n        email: \"user24@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Peter de Castro\",\n        type: \"Savings Peso\",\n        number: \"47290539483\",\n        balance: 102938.34,\n        isAdmin: false\n    },\n    {\n        email: \"user34@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Noli Enriquez\",\n        type: \"Checking Peso\",\n        number: \"47290539484\",\n        balance: 837495.38, \n        isAdmin: false\n    },\n\n    {\n        email: \"kibabe@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Karen Davila\",\n        type: \"Checking Peso\",\n        number: \"47290539485\",\n        balance: 574839.58, \n        isAdmin: false\n    }\n];\n\nexport default DATA;\n","import React from \"react\";\n\nexport const Logo = () => {\n    return(\n        <h1 id=\"logo\"><i className='bx bxs-paper-plane' ></i> Avion Bank</h1>\n    )\n}\n","import React from 'react';\nimport { Logo } from './Logo';\n\nexport const Sidebar = (props) => {\n    return(\n        <section id=\"side-menu\">\n            <Logo />\n            <SideMenu changePage={props.changePage} logoutHandler={props.logoutHandler} />          \n        </section>\n    )\n}\n  \nexport const SideMenu = (props) => {\n\n    return (\n        <ul>\n            <SideLink onClickHandler={props.changePage} page=\"home\" icon=\"bx bx-home\" text=\"Home\" />\n            <SideLink onClickHandler={props.changePage} page=\"create-account\" icon=\"bx bx-user-pin\" text=\"Create Account\" />\n            <SideLink onClickHandler={props.changePage} page=\"transfer\" icon=\"bx bx-transfer\" text=\"Fund Transfer\" />\n            <SideLink onClickHandler={props.changePage} page=\"deposit\" icon=\"bx bx-money\" text=\"Deposit\" />\n            <SideLink onClickHandler={props.changePage} page=\"withdraw\" icon=\"bx bx-log-out-circle\" text=\"Withdraw\" />\n            <SideLink onClickHandler={props.logoutHandler} icon=\"bx bx-log-out\" text=\"Logout\" />\n        </ul>\n    )\n}\n  \nexport const SideLink = (props) => {\n    const {icon, text, page} = props;\n    \n    function clickLink(event) {\n        if(page) {\n            event.preventDefault();\n            props.onClickHandler(page);\n        } else {\n            event.preventDefault();\n            props.onClickHandler();\n        }\n    }\n\n    return (\n        <li><a onClick={clickLink} href=\"#\"><i className={icon} ></i> {text}</a></li>\n    )\n}\n","export function formatNumber(number) \n{\n    return number.toLocaleString(undefined, {maximumFractionDigits: 2});\n}\n\nexport function trim(number) {\n    return parseFloat(number.replace(/,/g, '')) || 0;\n}\n\nexport function findAccount(number) {\n    const users = JSON.parse(localStorage.getItem('users'));\n\n    for(const user of users) {\n        if(user.number === number) {\n            return user;\n        }\n    }\n\n    return false;\n}\n\nexport function transact(number, amount, type, setUsers=null)\n{\n    let multiplier = 1;\n    if(type === 'add') multiplier = 1;\n    if(type === 'subtract') multiplier = -1;\n\n    const users = JSON.parse(localStorage.getItem('users'));\n    \n    for(const user of users) {\n        if(user.number === number) {\n            user.balance += amount * multiplier;\n        }\n    }\n    setUsers(users);\n    localStorage.setItem('users', JSON.stringify(users));\n}\n\nexport function capitalize(str) \n{\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React from \"react\";\nimport { ActionButtons } from \"./ActionButtons\";\nimport { formatNumber } from \"./Utils\";\n\nexport const Account = (props) => {\n    const {type, accountNumber, balance, fullname} = props;\n    \n    return (\n      <div className=\"account\">\n          <div className=\"details\">\n              <AccountHolder fullname={fullname} />\n              <AccountType type={type} />\n              <AccountNumber accountNumber={accountNumber} />\n              {/* <ActionButtons /> */}\n          </div>\n          <AccountBalance balance={formatNumber(balance)} />\n      </div>\n    )\n  }\n  \nexport const AccountHolder = (props) => {\n    return (\n      <h1>{props.fullname}</h1>\n    )\n  }\n  \n  \nexport const AccountType = (props) => {\n    return (\n      <h3>{props.type}</h3>\n    )\n  }\n  \n  \nexport const AccountNumber = (props) => {\n    return (\n      <div>{props.accountNumber}</div>\n    )\n  }\n  \n  \nexport const AccountBalance = (props) => {\n    const balance = props.balance;\n    return (\n      <div className=\"balance\">{balance}</div>\n    )\n  }\n\n","import { Account } from \"./Account\";\n\nexport const MainContent = (props) => {\n    const users = props.users;\n      \n    const bankAccounts = users.map(user => {\n      return <Account fullname={user.fullname} \n        type={user.type} \n        accountNumber={user.number} \n        balance={user.balance} />\n    });\n      \n    return (\n      <section id=\"main-content\">\n        {bankAccounts}\n      </section>\n    )\n  }\n\n","export const Notif = (props) => {\n    return <div className={`notif ${props.style}`}>{props.message}</div>\n}\n","import { useState } from \"react\";\nimport { Notif } from \"./Notif\";\nimport {formatNumber, trim} from './Utils';\n\nexport const CreateAccountPage = (props) => {\n    const createRandomAccount = () => {\n        return Math.floor(1000000000 + Math.random() * 9000000000);\n    }\n    \n    const [notif, setNotif] = useState({message: 'Create a new client account.', style: 'left'});\n    const [initialBalance, setInitialBalance] = useState(0);\n    const [initialAccountNumber, setInitialAccountNumber] = useState(createRandomAccount());\n\n    const createNewAccount = (user) => {\n        const localUsers = props.users;\n\n        let alreadyExists = false;\n        localUsers.forEach(row => {\n            if(row.email === user.email) {\n                alreadyExists = true;\n            }\n        });\n\n        if(alreadyExists) {\n            setNotif({message: 'This email already exists. Try again.', style: 'danger'});\n            return false;\n        } else {\n            setNotif('');\n            localUsers.unshift(user);\n            props.setUsers(localUsers); \n            localStorage.setItem('users', JSON.stringify(localUsers));\n            setNotif({message: 'Successfully saved.', style: 'success'});\n            return true;\n        }\n    }\n\n    const handleCreateAccount = (event) => {\n        event.preventDefault();\n        const user = event.target.elements;\n\n        const account = {\n            email: user.email.value,\n            password: user.password.value,\n            fullname: user.fullname.value,\n            type: user.accountType.value,\n            number: user.accountNumber.value,\n            isAdmin: false,\n            balance: trim(user.initialBalance.value)\n        }\n\n        const isSaved = createNewAccount(account);\n        if(isSaved) {\n            user.email.value = '';\n            user.password.value = '';\n            user.fullname.value = ''; \n            user.accountNumber.value = setInitialAccountNumber(createRandomAccount());\n            user.initialBalance.value = setInitialBalance(0);\n        }\n    }\n\n    const onInitialBalance = event => {\n        const amount = trim(event.target.value) || 0;\n        setInitialBalance(amount);\n    }\n\n    return (\n        <section id=\"main-content\">\n            <form id=\"form\" onSubmit={handleCreateAccount}>\n                <h1>Create Account</h1>\n                <Notif message={notif.message} style={notif.style} />\n                <label htmlFor=\"fullname\">Full name</label>\n                <input id=\"fullname\" type=\"text\" autoComplete=\"off\" name=\"fullname\" />\n                <hr />\n                <label htmlFor=\"account-number\">Account # (Randomly Generated)</label>\n                <input id=\"account-number\" name=\"accountNumber\" className=\"right\" value={initialAccountNumber} type=\"number\" disabled />\n\n                <label htmlFor=\"balance\">Initial balance</label>\n                <input id=\"balance\" type=\"text\" value={formatNumber(initialBalance)} onChange={onInitialBalance} name=\"initialBalance\" className=\"right\" />\n\n                <label htmlFor=\"account-type\">Account Type</label>\n                <select name=\"accountType\">\n                    <option value=\"Checking Account\">Checking Account</option>\n                    <option value=\"Savings Accounts\">Savings Account</option>\n                </select>\n                <hr />\n                <label htmlFor=\"email\">Email Address</label>\n                <input id=\"email\" type=\"email\" name=\"email\" />\n                <label htmlFor=\"password\">Password</label>\n                <input id=\"password\" type=\"password\" name=\"password\" />\n                <input value=\"Create Account\" className=\"btn\" type=\"submit\" />\n            </form>\n        </section>\n    )\n}\n","import { useState } from \"react\";\nimport { Notif } from \"./Notif\";\nimport { formatNumber } from \"./Utils\";\n\nexport const TransferPage = (props) => {\n\n    const [users, setUsers] = useState(props.users); \n    const [receivers, setReceivers] = useState(users);\n    const [sender, setSender] = useState({balance: 0});\n    const [receiver, setReceiver] = useState({balance: 0});\n    const [notif, setNotif] = useState({message: 'Transfer money from one account to another.', style: 'left'});\n    const [transferAmount, setTransferAmount] = useState(0);\n\n    const senderSelected = (event) => {\n        const accountNumber = event.target.value;\n\n        const newUsers = [];\n        let sender = null; \n\n        users.forEach(user => {\n            if(user.number === accountNumber) {\n                sender = user;        \n            } else {\n                newUsers.push(user);\n            }\n        })\n\n        setSender(sender);\n        setReceivers(newUsers);\n        setReceiver({number: 0, balance: 0});\n    }\n\n    const receiverSelected = event => {\n        const accountNumber = event.target.value;\n\n        let receiver = null;\n\n        users.forEach(user => {\n            if(user.number === accountNumber) {\n                receiver = user;\n            }\n        })\n\n        setReceiver(receiver);\n    }\n\n    const senders = users.map(user => {\n        return (\n            <option value={user.number}>{user.fullname} #{user.number}</option>\n        )\n    });\n\n    const newReceivers = receivers.map(receiver => {\n        return (\n            <option value={receiver.number}>{receiver.fullname} #{receiver.number}</option>\n        )\n    })\n\n    const transferFund = event => {\n        event.preventDefault();\n        const amount = parseFloat(event.target.elements.amount.value.replace(/,/g, ''));\n        if(amount <= 0) return false;\n\n        console.log(\"Transfer\");\n        // get localstorage users\n        const users = JSON.parse(localStorage.getItem('users'));\n\n        if(sender.number !== 0 && receiver.number !== 0) {\n            // deduct from sender\n            let senderSuccess = false;\n            users.forEach(user => {\n                if(user.number === sender.number) {\n                    if(user.balance - amount >= 0) {\n                        user.balance -= amount;\n                        setSender(user);\n                        senderSuccess = true;\n                    }\n                }\n            });\n\n            // add to receiver \n            if(senderSuccess) {\n                users.forEach(user => {\n                    if(user.number === receiver.number) {\n                        user.balance += amount;\n                        setReceiver(user);\n                    }\n                });\n\n                setNotif({ message: 'Successful transfer.', style: 'success' });\n                setUsers(users);\n                props.setUsers(users);\n                localStorage.setItem('users', JSON.stringify(users));\n                setTransferAmount(0);\n            } \n            else {\n                setNotif({message: 'Transfer failed.', style: 'danger'});\n            }\n        }\n        else {\n            setNotif({message: 'Incomplete information. Missing sender or receiver.', style: 'danger' });\n        }\n    }\n\n    const onTransfer = (e) => {\n        const transfer = parseFloat(e.target.value.replace(/,/g, '')) || 0;\n        setTransferAmount(transfer);\n    }\n\n    return (\n        <section id=\"main-content\">\n            <form id=\"form\" onSubmit={transferFund}>\n                <h1>Fund Transfer</h1>\n                \n                <Notif message={notif.message} style={notif.style} />\n                <h2>Sender</h2>\n                <label>From (Sender)</label>\n                <select onChange={senderSelected} name=\"sender\">\n                    <option>Select Sender</option>\n                    {senders}\n                </select>\n\n                <label>Current balance</label>\n                <input type=\"text\" className=\"right\" value={formatNumber(sender.balance)} disabled />\n                <label>Amount to Transfer</label>\n                <input type=\"text\" name=\"amount\" value={formatNumber(transferAmount)} onChange={onTransfer} autoComplete=\"off\" className=\"right big-input\" />\n\n                <div className=\"transfer-icon\"><i className='bx bx-down-arrow-alt'></i></div>\n                <h2>Receiver</h2>\n                <label>To (Receiver)</label>\n                <select value={receiver.number || 0} onChange={receiverSelected} name=\"receiver\">\n                    <option>Select Receiver</option>\n                    {newReceivers}\n                </select>\n                <label>Current balance</label>\n                <input type=\"text\" className=\"right\" value={formatNumber(receiver.balance)} disabled />\n                <input type=\"submit\" className=\"btn\" value=\"Transfer Fund\" />\n            </form>\n        </section>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { Notif } from \"./Notif\";\nimport { formatNumber, findAccount, transact, trim, capitalize } from \"./Utils\";\n\nexport const TransactPage = (props) => {\n    const users = JSON.parse(localStorage.getItem('users'));\n    const starting = {message: '', style: 'left'};\n    const setNotif = props.setNotif;\n    const notif = props.notif;\n    const [accounts, setAccounts] = useState(users);\n    const [selectedAccount, setSelectedAccount] = useState({balance: 0});\n    const [depositAmount, setDepositAmount] = useState(0);\n\n    const options = accounts.map(user => {\n        return <option value={user.number}>{user.fullname} #{user.number}</option>\n    });\n\n    const displayBalance = (e) => {\n        setNotif(notif);\n        const selectedNumber = e.target.value;\n        \n        for(const user of accounts) {\n            if(user.number === selectedNumber) {\n                setSelectedAccount(user);\n                break;\n            }\n        }\n    }\n\n    const onDeposit = (e) => {\n        const amount = formatNumber(trim(e.target.value));\n        setDepositAmount(amount);\n    }\n\n    const processTransfer = (e) => {\n        e.preventDefault();\n        const amount = trim(e.target.elements.amount.value);\n        const accountNumber = e.target.elements.account.value;\n\n        if(amount > 0 && accountNumber !== \"0\") {\n            for(const user of accounts) {\n                if(user.number === accountNumber) {\n                    transact(user.number, amount, props.type, props.setUsers);\n                    setSelectedAccount(findAccount(user.number));\n                    setAccounts(JSON.parse(localStorage.getItem('users')));\n                    setDepositAmount(0);\n                    setNotif({message: `${capitalize(props.page)} successful.`, style: 'success'});\n                    break;\n                }\n            }\n        } \n        else {\n            setNotif({message: `${capitalize(props.page)} failed.`, style: 'danger'});\n        }\n    }\n    // 'bx bx-up-arrow-alt'\n    const icon = props.page === 'withdraw' ? 'bx bx-down-arrow-alt' : 'bx bx-up-arrow-alt';\n\n    return (\n        <section id=\"main-content\">\n            <form id=\"form\" onSubmit={processTransfer}>\n                <h1>{props.page}</h1>\n                <Notif message={notif.message} style={notif.style} />\n                <label>Account</label>\n                <select name=\"account\" onChange={displayBalance}>\n                    <option value=\"0\">Select Account</option>\n                    {options}\n                </select>\n\n                <label>Current balance</label>\n                <input type=\"text\" className=\"right\" value={formatNumber(selectedAccount.balance)} disabled />\n                \n                <div className=\"transfer-icon\"><i class={icon}></i></div>\n                <label>Amount to {props.page}</label>\n                <input type=\"text\" name=\"amount\" value={depositAmount} onChange={onDeposit} autoComplete=\"off\" className=\"right big-input\" />\n                <button type=\"submit\" className=\"btn\">{props.page}</button>\n            </form>\n        </section>\n    )\n}\n","import { useState } from \"react\";\nimport { Sidebar } from \"./Sidebar\";\nimport { MainContent } from \"./MainContent\";\nimport { CreateAccountPage } from \"./CreateAccountPage\";\nimport { TransferPage } from \"./TransferPage\";\nimport { TransactPage } from \"./TransactPage\";\nimport { Notif } from \"./Notif\";\n\nexport const Dashboard = (props) => {\n    const [page, setPage] = useState('home');\n    const [users, setUsers] = useState(props.users);\n    const [notif, setNotif] = useState({message: '', style: ''});\n\n    const changePageHandler = (pageName) => {\n        setPage(pageName);\n\n        if(pageName === 'withdraw') {\n            setNotif({message: 'Select an account to withdraw money from.', style: 'left'});\n        } \n\n        if(pageName === 'deposit') {\n            setNotif({message: 'Select an account to deposit money.', style: 'left'});\n        }\n        \n    }\n\n    if(page === 'home') {\n        return (\n            <main>\n              <Sidebar changePage={changePageHandler} logoutHandler={props.logoutHandler} />\n              <MainContent users={users} />\n            </main>\n        )\n    }\n\n    if(page === 'create-account') {\n        return (\n            <main>\n              <Sidebar changePage={changePageHandler} logoutHandler={props.logoutHandler} />\n              <CreateAccountPage users={users} setUsers={setUsers} />\n            </main>\n        )\n    }\n\n    if(page === 'transfer') {\n        return (\n            <main>\n                <Sidebar changePage={changePageHandler} logoutHandler={props.logoutHandler} />\n                <TransferPage users={users} setUsers={setUsers} />\n            </main>\n        )\n    }\n\n    if(page === 'deposit') {\n        return (\n            <main>\n                <Sidebar changePage={changePageHandler} logoutHandler={props.logoutHandler} />\n                <TransactPage users={users} setUsers={setUsers} notif={notif} setNotif={setNotif} type=\"add\" page={page} />\n            </main>\n        )\n    }\n\n    if(page === 'withdraw') {\n        return (\n            <main>\n                <Sidebar changePage={changePageHandler} logoutHandler={props.logoutHandler} />\n                <TransactPage users={users} setUsers={setUsers} notif={notif} setNotif={setNotif} type=\"subtract\" page={page} />\n            </main>\n        )\n    }\n}\n","import React, { useState } from 'react';\nimport { Logo } from './Logo';\nimport { Notif } from './Notif';\n\nexport const LoginPage = (props) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n  \n    const onSubmitHandler = (event) => {\n      event.preventDefault();\n      props.loginHandler(username, password);\n    }\n  \n    const onChangeUsername = (event) => {\n      setUsername(event.target.value);\n    }\n  \n    const onChangePassword = (event) => {\n      setPassword(event.target.value);\n    }\n  \n    return (\n      <div id=\"login-page\">\n        <div id=\"login\">\n          <Logo />\n          <Notif message={props.notif.message} style={props.notif.style} />\n          <form onSubmit={onSubmitHandler}>\n            <label htmlFor=\"username\">Username</label>\n            <input id=\"username\" autoComplete=\"off\" onChange={onChangeUsername}  value={username} type=\"text\" />\n            <label htmlFor=\"password\">Password</label>\n            <input id=\"password\" autoComplete=\"off\" onChange={onChangePassword} value={password} type=\"password\" />\n            <button type=\"submit\" className=\"btn\">Login</button>\n          </form>\n        </div>\n      </div>\n    )\n}\n","import React, {useState} from 'react';\nimport DATA from '../data';\nimport { Dashboard } from './Dashboard';\nimport { LoginPage } from './LoginPage';\n\nexport const Authenticate = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [notif, setNotif] = useState({message: '', style: ''});\n    const [isAdmin, setIsAdmin] = useState(false);\n  \n    const localUsers = localStorage.getItem('users');\n    \n    if(!localUsers) {\n      localStorage.setItem('users', JSON.stringify(DATA));\n    }\n\n    const clients = JSON.parse(localStorage.getItem('users'));\n\n    const isAdminLoginSuccess = (email, password) => {\n      let isFound = false;\n\n      clients.forEach(user => {\n        if(user.email === email && user.password === password) {\n          if(user.isAdmin) {\n            setIsAdmin(true);\n          }\n          setNotif('');\n          isFound = true;\n        }\n      });\n  \n      if(!isFound) setNotif({message: 'Wrong username and password.', style: 'danger'});\n      return isFound;\n    }\n  \n    const login = (username, password) => {\n        if(isAdminLoginSuccess(username, password)) {\n            setIsLoggedIn(true);\n        }\n    }\n  \n    const logout = () => {\n        setIsLoggedIn(false);\n        setIsAdmin(false);\n        setNotif({message: 'You have logged out.', style: 'success'});\n    }\n  \n    if(isLoggedIn) {\n      if(isAdmin) {\n        return <Dashboard users={clients} logoutHandler={logout} />\n      } else {\n        // Todo: ClientDashboard\n        // Clients have different dashboard\n        return \"You are a client.\";\n      }\n    } else {\n      return <LoginPage loginHandler={login} notif={notif} isLoggedIn={isLoggedIn} />\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { Authenticate } from './components/Authenticate';\n\nfunction App() {\n  return (\n    <Authenticate />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}