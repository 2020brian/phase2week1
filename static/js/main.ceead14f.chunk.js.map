{"version":3,"sources":["data.js","components/Logo.js","components/Sidebar.js","components/ActionButtons.js","components/Utils.js","components/Account.js","components/MainContent.js","components/Notif.js","components/CreateAccountPage.js","components/TransferPage.js","components/TransactPage.js","components/Dashboard.js","components/LoginPage.js","components/MainClientContent.js","components/BudgetApp.js","components/ClientDashboard.js","components/Authenticate.js","App.js","reportWebVitals.js","index.js"],"names":["DATA","email","password","fullname","type","number","balance","isAdmin","transactions","budget","title","amount","date","Logo","id","className","Sidebar","props","user","logoutHandler","changePage","page","menu","ClientMenu","onClickHandler","active","icon","text","SideMenu","SideLink","onClick","event","preventDefault","href","ActionButtons","editingUser","setEditingUser","index","setEditModal","setDeleteUser","actionType","ActionButton","e","click","formatNumber","toLocaleString","undefined","maximumFractionDigits","trim","parseFloat","replace","findAccount","users","JSON","parse","localStorage","getItem","transact","setUsers","multiplier","unshift","getDateToday","setItem","stringify","capitalize","str","charAt","toUpperCase","slice","saveBudgetToDB","accountNumber","newBudget","filteredUsers","filter","dbUser","push","addUserToUsers","transDate","Date","month","getDay","getFullYear","Account","action","AccountHolder","AccountType","AccountNumber","AccountBalance","MainContent","useState","isCurrentUserAdmin","setIsCurrentUserAdmin","useEffect","localUser","bankAccounts","map","Notif","style","message","CreateAccountPage","createRandomAccount","Math","floor","random","notif","setNotif","initialBalance","setInitialBalance","initialAccountNumber","setInitialAccountNumber","onSubmit","target","elements","localUsers","alreadyExists","forEach","row","createNewAccount","value","accountType","htmlFor","autoComplete","name","disabled","onChange","TransferPage","isClient","client","setClient","receivers","setReceivers","sender","setSender","receiver","setReceiver","transferAmount","setTransferAmount","senders","newReceivers","senderField","newUsers","senderSuccess","console","log","transfer","TransactPage","accounts","setAccounts","selectedAccount","setSelectedAccount","depositAmount","setDepositAmount","options","account","selectedNumber","Dashboard","setPage","deleteUser","editModal","isUpdate","setIsUpdate","newAccount","setNewAccount","changePageHandler","pageName","modal","accountName","AccountEditModal","setAccount","LoginPage","username","setUsername","setPassword","loginHandler","MainClientContent","transaction","BudgetApp","budgetList","setBudgetList","isModalOpen","setIsModalOpen","modalValue","setModalValue","modalAction","setModalAction","getTotalExpenses","reduce","prev","curr","totalExpenses","currentBalance","setCurrentBalance","editRow","saveBudget","newBudgetList","updateBudget","total","item","filteredBudget","budgetIndex","deleteRow","class","BudgetModal","defaultValue","ClientDashboard","logout","currentUser","Authenticate","isLoggedIn","setIsLoggedIn","setIsAdmin","clients","removeItem","isFound","isLoginSuccess","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ceead14f.chunk.js","sourcesContent":["const DATA = [\n    {\n        email: \"admin@admin.com\",\n        password: \"abc123\",\n        fullname: \"Admin Account\",\n        type: \"Savings Peso\",\n        number: \"47290539480\",\n        balance: 1000,\n        isAdmin: true, \n        transactions: []\n    },\n    {\n        email: \"jeff@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Jeffrey de Lara\",\n        type: \"Savings Peso\",\n        number: \"47290539481\",\n        balance: 1029300.43,\n        isAdmin: true, \n        transactions: []\n    },\n    {\n        email: \"jeff2@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Juan dela Cruz\",\n        type: \"Savings Peso\",\n        number: \"47290539482\",\n        balance: 392830.22,\n        isAdmin: false, \n        budget: [\n            {\n                title: \"Tuition fee\",\n                amount: 12000\n            },\n            {\n                title: \"Food take out during the pandemic\",\n                amount: 4000\n            }\n        ], \n        transactions: [\n            {\n                title: \"Fund transfer\", \n                amount: 2000,\n                type: \"debit\", \n                date: \"October 1, 2021\"\n            }, \n            {\n                title: \"Withdraw\", \n                amount: 10000, \n                type: \"debit\",\n                date: \"October 1, 2021\"\n            }\n        ]\n    },\n    {\n        email: \"user24@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Peter de Castro\",\n        type: \"Savings Peso\",\n        number: \"47290539483\",\n        balance: 102938.34,\n        isAdmin: false, \n        transactions: []\n    },\n    {\n        email: \"user34@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Noli Enriquez\",\n        type: \"Checking Peso\",\n        number: \"47290539484\",\n        balance: 837495.38, \n        isAdmin: false, \n        transactions: []\n    },\n\n    {\n        email: \"derek@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Karen Davila\",\n        type: \"Checking Peso\",\n        number: \"47290539485\",\n        balance: 574839.58, \n        isAdmin: false, \n        transactions: []\n    },\n    {\n        email: \"client@client.com\",\n        password: \"abc123\",\n        fullname: \"Client Demo Account\",\n        type: \"Savings Peso\",\n        number: \"47290539486\",\n        balance: 1000,\n        isAdmin: false, \n        transactions: []\n    }\n];\n\nexport default DATA;\n","import React from \"react\";\n\nexport const Logo = () => {\n    return(\n        <h1 id=\"logo\"><i className='bx bxs-paper-plane' ></i> Avion Bank</h1>\n    )\n}\n","import React from 'react';\nimport { Logo } from './Logo';\n\nexport const Sidebar = (props) => {\n    const { user, logoutHandler, changePage, page } = props;\n    let menu = null;\n\n    // not regular user but an admin\n    if(!user) {\n        menu = <SideMenu changePage={changePage} page={page} logoutHandler={logoutHandler} />;\n    }\n\n    // regular user\n    if(user) {\n        menu = <ClientMenu changePage={changePage} page={page} logoutHandler={logoutHandler} />\n    }\n\n    return(\n        <section id=\"side-menu\">\n            <Logo />\n            {menu}\n        </section>\n    )\n}\n\nexport const ClientMenu = (props) => {\n    const {changePage, logoutHandler, page} = props;\n\n    return (\n        <ul>\n            <SideLink onClickHandler={changePage} active={page} page=\"home\" icon=\"bx bx-home\" text=\"Home\" />\n            <SideLink onClickHandler={changePage} active={page} page=\"budget\" icon=\"bx bx-money\" text=\"Budget App\" />\n            <SideLink onClickHandler={changePage} active={page} page=\"transfer\" icon=\"bx bx-transfer\" text=\"Fund Transfer\" />\n            <SideLink onClickHandler={logoutHandler} active={page} icon=\"bx bx-log-out\" text=\"Logout\" />\n        </ul>\n    )\n}\n  \nexport const SideMenu = (props) => {\n    const {changePage, logoutHandler, page} = props;\n    return (\n        <ul>\n            <SideLink onClickHandler={changePage} active={page} page=\"home\" icon=\"bx bx-home\" text=\"Home\" />\n            <SideLink onClickHandler={changePage} active={page} page=\"create-account\" icon=\"bx bx-user-pin\" text=\"Create Account\" />\n            <SideLink onClickHandler={changePage} active={page} page=\"transfer\" icon=\"bx bx-transfer\" text=\"Fund Transfer\" />\n            <SideLink onClickHandler={changePage} active={page} page=\"deposit\" icon=\"bx bx-money\" text=\"Deposit\" />\n            <SideLink onClickHandler={changePage} active={page} page=\"withdraw\" icon=\"bx bx-log-out-circle\" text=\"Withdraw\" />\n            <SideLink onClickHandler={logoutHandler} active={page} icon=\"bx bx-log-out\" text=\"Logout\" />\n        </ul>\n    )\n}\n  \nexport const SideLink = (props) => {\n    const {icon, text, page, active} = props;\n    \n    function clickLink(event) {\n        if(page) {\n            event.preventDefault();\n            props.onClickHandler(page);\n        } else {\n            event.preventDefault();\n            props.onClickHandler();\n        }\n    }\n\n    return (\n        <li><a onClick={clickLink} className={ active === page ? 'active' : '' } href=\"#\"><i className={icon} ></i> {text}</a></li>\n    )\n}\n","import React from \"react\";\n\nexport const ActionButtons = (props) => {\n    const {editingUser, setEditingUser, index, setEditModal, setDeleteUser} = props;\n\n    return (\n      <div id=\"actions\">\n        <ActionButton \n          icon=\"bx bx-edit\" \n          text=\"Edit\" \n          index={index} \n          actionType=\"edit\"\n          editingUser={editingUser} \n          actionType='edit' \n          setEditingUser={setEditingUser} setEditModal={setEditModal} />\n\n        <ActionButton \n          icon=\"bx bxs-x-square\"  \n          index={index} \n          actionType='delete'\n          text=\"Delete\" editingUser={editingUser} \n          setDeleteUser={setDeleteUser} />\n      </div>\n    )\n  }\n  \nexport const ActionButton = (props) => {\n    const {icon, text, editingUser, actionType, setEditingUser, index, setEditModal, setDeleteUser} = props;\n\n    const click = (e, index) => {\n      e.preventDefault();\n      \n      if(actionType === 'edit') {\n        setEditingUser(index);\n        setEditModal(true);\n      }\n\n      if(actionType === 'delete') {\n        setDeleteUser(index);\n      }\n    }\n\n    return (\n      <button onClick={(e) => click(e, index)}><i className={icon} ></i> {text}</button>\n    )\n  }\n","export function formatNumber(number) \n{\n    return number.toLocaleString(undefined, {maximumFractionDigits: 2});\n}\n\nexport function trim(number) {\n    return parseFloat(number.replace(/,/g, '')) || 0;\n}\n\nexport function findAccount(number) {\n    const users = JSON.parse(localStorage.getItem('users'));\n\n    for(const user of users) {\n        if(user.number === number) {\n            return user;\n        }\n    }\n\n    return false;\n}\n\nexport function transact(number, amount, type, setUsers=null)\n{\n    let multiplier = 1;\n    if(type === 'add' || type === 'credit') multiplier = 1;\n    if(type === 'subtract' || type === 'debit') multiplier = -1;\n\n    const users = JSON.parse(localStorage.getItem('users'));\n    \n    for(const user of users) {\n        if(user.number === number) {\n            user.balance += amount * multiplier;\n\n            if(type === 'add' || type === 'credit') {\n                user.transactions.unshift({\n                    title: `Deposit`, \n                    amount: amount, \n                    type: \"credit\", \n                    date: getDateToday()\n                })\n            }\n\n            if(type === 'subtract' || type === 'debit') {\n                user.transactions.unshift({\n                    title: `Withdraw`, \n                    amount: amount, \n                    type: \"debit\", \n                    date: getDateToday()\n                })\n            }\n        }\n    }\n    setUsers(users);\n    localStorage.setItem('users', JSON.stringify(users));\n}\n\nexport function capitalize(str) \n{\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function saveBudgetToDB(accountNumber, newBudget) \n{\n    const user = findAccount(accountNumber);\n    user.budget = newBudget;\n    const filteredUsers = addUserToUsers(user);\n    localStorage.setItem('users', JSON.stringify(filteredUsers));\n}\n\n\n\nfunction addUserToUsers(user) {\n    const users = JSON.parse(localStorage.getItem('users'));\n\n    const filteredUsers = users.filter(dbUser => {\n        return dbUser.number !== user.number;\n    });\n\n    filteredUsers.push(user);\n    return filteredUsers;\n}\n\nexport function getDateToday() {\n    const transDate = new Date();\n    return `${transDate.toLocaleString(\"en-us\", { month: \"long\" })} ${transDate.getDay()}, ${transDate.getFullYear()}`;\n}\n","import React from \"react\";\nimport { ActionButtons } from \"./ActionButtons\";\nimport { formatNumber } from \"./Utils\";\n\nexport const Account = (props) => {\n    \n    const {type, accountNumber, balance, fullname, editingUser, setEditingUser, setDeleteUser, index, isAdmin, setEditModal} = props;\n    \n    const action = isAdmin ? <ActionButtons index={index} \n      editingUser={editingUser} \n      setEditingUser={setEditingUser} \n      setEditModal={setEditModal} setDeleteUser={setDeleteUser} /> : '';\n    \n    return (\n      <div className=\"account\">\n          <div className=\"details\">\n              <AccountHolder fullname={fullname} />\n              <AccountType type={type} />\n              <AccountNumber accountNumber={accountNumber} />\n              {action}\n          </div>\n          <AccountBalance balance={formatNumber(balance)} />\n      </div>\n    )\n  }\n  \nexport const AccountHolder = (props) => {\n    return (\n      <h1>{props.fullname}</h1>\n    )\n  }\n  \n  \nexport const AccountType = (props) => {\n    return (\n      <h3>{props.type}</h3>\n    )\n  }\n  \n  \nexport const AccountNumber = (props) => {\n    return (\n      <div>{props.accountNumber}</div>\n    )\n  }\n  \n  \nexport const AccountBalance = (props) => {\n    const balance = props.balance;\n    return (\n      <div className=\"balance\">{balance}</div>\n    )\n  }\n\n","import { Account } from \"./Account\";\nimport React, { useEffect, useState } from \"react\";\n\nexport const MainContent = (props) => {\n    const users = props.users;\n    const {editingUser, setEditingUser, setEditModal, setDeleteUser} = props;\n    const [isCurrentUserAdmin, setIsCurrentUserAdmin] = useState(false);\n\n    useEffect(() => {\n      const localUser = JSON.parse(localStorage.getItem('currentUser'));\n      setIsCurrentUserAdmin(localUser.isAdmin);\n    }, [isCurrentUserAdmin]);\n    \n    const bankAccounts = users.map((user, index) => {\n      return <Account key={index} index={index} fullname={user.fullname} \n        type={user.type} \n        isAdmin={isCurrentUserAdmin} \n        accountNumber={user.number} \n        balance={user.balance} \n        editingUser={editingUser} \n        setEditingUser={setEditingUser} setEditModal={setEditModal} \n        setDeleteUser={setDeleteUser} />\n    });\n      \n    return (\n      <section id=\"main-content\">\n        {bankAccounts}\n      </section>\n    )\n    \n  }\n\n","export const Notif = (props) => {\n    return <div className={`notif ${props.style}`}>{props.message}</div>\n}\n","import { useState } from \"react\";\nimport { Notif } from \"./Notif\";\nimport {formatNumber, trim} from './Utils';\n\nexport const CreateAccountPage = (props) => {\n    const createRandomAccount = () => {\n        return Math.floor(1000000000 + Math.random() * 9000000000);\n    }\n    \n    const [notif, setNotif] = useState({message: 'Create a new client account.', style: 'left'});\n    const [initialBalance, setInitialBalance] = useState(0);\n    const [initialAccountNumber, setInitialAccountNumber] = useState(createRandomAccount());\n\n    const createNewAccount = (user) => {\n        const localUsers = props.users;\n\n        let alreadyExists = false;\n        localUsers.forEach(row => {\n            if(row.email === user.email) {\n                alreadyExists = true;\n            }\n        });\n\n        if(alreadyExists) {\n            setNotif({message: 'This email already exists. Try again.', style: 'danger'});\n            return false;\n        } else {\n            setNotif('');\n            localUsers.unshift(user);\n            props.setUsers(localUsers); \n            localStorage.setItem('users', JSON.stringify(localUsers));\n            setNotif({message: 'Successfully saved.', style: 'success'});\n            return true;\n        }\n    }\n\n    const handleCreateAccount = (event) => {\n        event.preventDefault();\n        const user = event.target.elements;\n\n        const account = {\n            email: user.email.value,\n            password: user.password.value,\n            fullname: user.fullname.value,\n            type: user.accountType.value,\n            number: user.accountNumber.value,\n            isAdmin: false,\n            balance: trim(user.initialBalance.value), \n            transactions: []\n        }\n\n        const isSaved = createNewAccount(account);\n        if(isSaved) {\n            user.email.value = '';\n            user.password.value = '';\n            user.fullname.value = ''; \n            user.accountNumber.value = setInitialAccountNumber(createRandomAccount());\n            user.initialBalance.value = setInitialBalance(0);\n        }\n    }\n\n    const onInitialBalance = event => {\n        const amount = trim(event.target.value) || 0;\n        setInitialBalance(amount);\n    }\n\n    return (\n        <section id=\"main-content\">\n            <form id=\"form\" onSubmit={handleCreateAccount}>\n                <h1>Create Account</h1>\n                <Notif message={notif.message} style={notif.style} />\n                <label htmlFor=\"fullname\">Full name</label>\n                <input id=\"fullname\" type=\"text\" autoComplete=\"off\" name=\"fullname\" />\n                <hr />\n                <label htmlFor=\"account-number\">Account # (Randomly Generated)</label>\n                <input id=\"account-number\" name=\"accountNumber\" className=\"right\" value={initialAccountNumber} type=\"number\" disabled />\n\n                <label htmlFor=\"balance\">Initial balance</label>\n                <input id=\"balance\" type=\"text\" value={formatNumber(initialBalance)} onChange={onInitialBalance} name=\"initialBalance\" className=\"right\" />\n\n                <label htmlFor=\"account-type\">Account Type</label>\n                <select name=\"accountType\">\n                    <option value=\"Checking Account\">Checking Account</option>\n                    <option value=\"Savings Accounts\">Savings Account</option>\n                </select>\n                <hr />\n                <label htmlFor=\"email\">Email Address</label>\n                <input id=\"email\" type=\"email\" name=\"email\" />\n                <label htmlFor=\"password\">Password</label>\n                <input id=\"password\" type=\"password\" name=\"password\" />\n                <input value=\"Create Account\" className=\"btn\" type=\"submit\" />\n            </form>\n        </section>\n    )\n}\n","import { useState } from \"react\";\nimport { Notif } from \"./Notif\";\nimport { formatNumber, getDateToday } from \"./Utils\";\n\nexport const TransferPage = (props) => {\n    const {isClient, client, setClient} = props;\n    const [users, setUsers] = useState(props.users); \n    const [receivers, setReceivers] = useState(users);\n    const [sender, setSender] = useState( isClient ? client : {balance: 0});\n    const [receiver, setReceiver] = useState({balance: 0});\n    const [notif, setNotif] = useState({message: 'Transfer money from one account to another.', style: 'left'});\n    const [transferAmount, setTransferAmount] = useState(0);\n\n    const senderSelected = (event) => {\n        const accountNumber = event.target.value;\n\n        let sender = null; \n\n        users.forEach(user => {\n            if(user.number === accountNumber) {\n                sender = user;        \n            }\n        })\n\n        const newUsers = users.filter((user, index) => {\n            return user.number !== accountNumber;\n        });\n\n        setSender(sender);\n        setReceivers(newUsers);\n        setReceiver({number: 0, balance: 0});\n    }\n\n    const receiverSelected = event => {\n        const accountNumber = event.target.value;\n\n        let receiver = null;\n\n        users.forEach(user => {\n            if(user.number === accountNumber) {\n                receiver = user;\n            }\n        })\n\n        setReceiver(receiver);\n    }\n\n    let senders = null;\n    if(!isClient) {\n        senders = users.map(user => {\n            return (\n                <option value={user.number}>{user.fullname} #{user.number}</option>\n            )\n        });\n    }\n\n    const newReceivers = receivers.map(receiver => {\n        if(sender.number !== receiver.number) {\n            return (\n                <option value={receiver.number}>{receiver.fullname} #{receiver.number}</option>\n            )\n        }\n        \n    })\n\n    const transferFund = event => {\n        event.preventDefault();\n        const amount = parseFloat(event.target.elements.amount.value.replace(/,/g, ''));\n        if(amount <= 0) return false;\n\n        // get localstorage users\n        const users = JSON.parse(localStorage.getItem('users'));\n\n        if(sender.number !== 0 && receiver.number !== 0 && receiver.number) {\n            // deduct from sender\n            let senderSuccess = false;\n            users.forEach(user => {\n                if(user.number === sender.number) {\n                    if(user.balance - amount >= 0) {\n                        user.balance -= amount;\n\n                        const transDate = new Date();\n                        console.log(user.transactions);\n                        user.transactions.unshift({\n                            title: `Fund transfer to ${receiver.fullname} #${receiver.number}`, \n                            amount: amount, \n                            type: \"debit\", \n                            date: getDateToday()\n                        });\n\n                        setSender(user);\n                        senderSuccess = true;\n                        \n                    }\n                }\n            });\n\n            // add to receiver \n            if(senderSuccess) {\n                users.forEach(user => {\n                    if(user.number === receiver.number) {\n                        user.balance += amount;\n                        \n                        user.transactions.unshift({\n                            title: `Fund transfer from ${sender.fullname} #${receiver.number}`, \n                            amount: amount, \n                            type: \"credit\", \n                            date: getDateToday()\n                        });\n\n                        setReceiver(user);\n                    }\n                });\n\n                setNotif({ message: 'Successful transfer.', style: 'success' });\n                setUsers(users);\n                props.setUsers(users);\n                localStorage.setItem('users', JSON.stringify(users));\n                setTransferAmount(0);\n            } \n            else {\n                setNotif({message: 'Transfer failed.', style: 'danger'});\n            }\n        }\n        else {\n            setNotif({message: 'Incomplete information. Missing sender or receiver.', style: 'danger' });\n        }\n    }\n\n    const onTransfer = (e) => {\n        const transfer = parseFloat(e.target.value.replace(/,/g, '')) || 0;\n        setTransferAmount(transfer);\n    }\n\n    let senderField = \n        <select onChange={senderSelected} name=\"sender\">\n            <option>Select Sender</option>\n            {senders}\n        </select>;\n    \n    if(isClient) {\n        senderField = <input type=\"text\" name=\"sender\" value={`${client.fullname} #${client.number}`} disabled />\n    }\n\n    return (\n        <section id=\"main-content\">\n            <form id=\"form\" onSubmit={transferFund}>\n                <h1>Fund Transfer</h1>\n                \n                <Notif message={notif.message} style={notif.style} />\n                <h2>Sender</h2>\n                <label>From (Sender)</label>\n                {senderField}\n\n                <label>Current balance</label>\n                <input type=\"text\" className=\"right\" value={formatNumber(sender.balance)} disabled />\n\n                <label>Amount to Transfer</label>\n                <input type=\"text\" name=\"amount\" value={formatNumber(transferAmount)} onChange={onTransfer} autoComplete=\"off\" className=\"right big-input\" />\n\n                <div className=\"transfer-icon\"><i className='bx bx-down-arrow-alt'></i></div>\n                <h2>Receiver</h2>\n                <label>To (Receiver)</label>\n                <select value={receiver.number || 0} onChange={receiverSelected} name=\"receiver\">\n                    <option>Select Receiver</option>\n                    {newReceivers}\n                </select>\n                <label>Current balance</label>\n                <input type=\"text\" className=\"right\" value={formatNumber(receiver.balance)} disabled />\n                <input type=\"submit\" className=\"btn\" value=\"Transfer Fund\" />\n            </form>\n        </section>\n    )\n}\n","import { useState } from \"react\";\nimport { Notif } from \"./Notif\";\nimport { formatNumber, findAccount, transact, trim, capitalize } from \"./Utils\";\n\nexport const TransactPage = (props) => {\n    const users = JSON.parse(localStorage.getItem('users'));\n    const setNotif = props.setNotif;\n    const notif = props.notif;\n    const [accounts, setAccounts] = useState(users);\n    const [selectedAccount, setSelectedAccount] = useState({balance: 0});\n    const [depositAmount, setDepositAmount] = useState(0);\n\n    const options = accounts.map(user => {\n        return <option value={user.number}>{user.fullname} #{user.number}</option>\n    });\n\n    const displayBalance = (e) => {\n        setNotif(notif);\n        const selectedNumber = e.target.value;\n        \n        for(const user of accounts) {\n            if(user.number === selectedNumber) {\n                setSelectedAccount(user);\n                break;\n            }\n        }\n    }\n\n    const onDeposit = (e) => {\n        const amount = formatNumber(trim(e.target.value));\n        setDepositAmount(amount);\n    }\n\n    const processTransfer = (e) => {\n        e.preventDefault();\n        const amount = trim(e.target.elements.amount.value);\n        const accountNumber = e.target.elements.account.value;\n\n        if(amount > 0 && accountNumber !== \"0\") {\n            for(const user of accounts) {\n                if(user.number === accountNumber) {\n                    transact(user.number, amount, props.type, props.setUsers);\n                    setSelectedAccount(findAccount(user.number));\n                    setAccounts(JSON.parse(localStorage.getItem('users')));\n                    setDepositAmount(0);\n                    setNotif({message: `${capitalize(props.page)} successful.`, style: 'success'});\n                    break;\n                }\n            }\n        } \n        else {\n            setNotif({message: `${capitalize(props.page)} failed.`, style: 'danger'});\n        }\n    }\n    // 'bx bx-up-arrow-alt'\n    const icon = props.page === 'withdraw' ? 'bx bx-down-arrow-alt' : 'bx bx-up-arrow-alt';\n\n    return (\n        <section id=\"main-content\">\n            <form id=\"form\" onSubmit={processTransfer}>\n                <h1>{props.page}</h1>\n                <Notif message={notif.message} style={notif.style} />\n                <label>Account</label>\n                <select name=\"account\" onChange={displayBalance}>\n                    <option value=\"0\">Select Account</option>\n                    {options}\n                </select>\n\n                <label>Current balance</label>\n                <input type=\"text\" className=\"right\" value={formatNumber(selectedAccount.balance)} disabled />\n                \n                <div className=\"transfer-icon\"><i className={icon}></i></div>\n                <label>Amount to {props.page}</label>\n                <input type=\"text\" name=\"amount\" value={depositAmount} onChange={onDeposit} autoComplete=\"off\" className=\"right big-input\" />\n                <button type=\"submit\" className=\"btn\">{props.page}</button>\n            </form>\n        </section>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { Sidebar } from \"./Sidebar\";\nimport { MainContent } from \"./MainContent\";\nimport { CreateAccountPage } from \"./CreateAccountPage\";\nimport { TransferPage } from \"./TransferPage\";\nimport { TransactPage } from \"./TransactPage\";\n\nexport const Dashboard = (props) => {\n    const [page, setPage] = useState('home');\n    const [users, setUsers] = useState(props.users);\n    const [notif, setNotif] = useState({message: '', style: ''});\n    const [editingUser, setEditingUser] = useState(null);\n    const [deleteUser, setDeleteUser] = useState(null);\n    const [editModal, setEditModal] = useState(false);\n    const [isUpdate, setIsUpdate] = useState(false); \n    const [newAccount, setNewAccount] = useState(null); \n\n    const changePageHandler = (pageName) => {\n        setPage(pageName);\n\n        if(pageName === 'withdraw') {\n            setNotif({message: 'Select an account to withdraw money from.', style: 'left'});\n        } \n\n        if(pageName === 'deposit') {\n            setNotif({message: 'Select an account to deposit money.', style: 'left'});\n        }\n    }\n\n    useEffect(() => {\n        if(deleteUser !== null) {\n\n            const filteredUsers = users.filter((user, index) => {\n                return index !== deleteUser\n            });\n\n            setUsers(filteredUsers);\n            setDeleteUser(null);\n            // save\n            localStorage.setItem('users', JSON.stringify(filteredUsers));\n        }\n    }, [deleteUser]);\n\n    useEffect(() => {\n        if(isUpdate) {\n            const filteredUsers = users.map((user, index) => {\n                if(user.number === newAccount.number) {\n                    user = {...user, ...newAccount};\n                }\n                return user;\n            });\n\n            setUsers(filteredUsers);\n            setIsUpdate(false);\n            // save\n            localStorage.setItem('users', JSON.stringify(filteredUsers));\n        }\n    }, [isUpdate]);\n\n    let modal = null;\n    if(editingUser !== null && editModal) {\n        const user = users[editingUser];\n        // accountName={} accountNumber={} balance={}\n        modal = <AccountEditModal \n            accountName={user.fullname} \n            accountNumber={user.number} \n            balance={user.balance} setEditModal={setEditModal} \n            setIsUpdate={setIsUpdate} setNewAccount={setNewAccount} setIsUpdate={setIsUpdate}  />\n    }\n\n    if(page === 'home') {\n        return (\n            <main>\n              <Sidebar changePage={changePageHandler} page={page} logoutHandler={props.logoutHandler} />\n              <MainContent users={users} editingUser={editingUser} \n                setEditModal={setEditModal} \n                setEditingUser={setEditingUser} setDeleteUser={setDeleteUser} />\n              {modal}\n            </main>\n        )\n    }\n\n    if(page === 'create-account') {\n        return (\n            <main>\n              <Sidebar changePage={changePageHandler} page={page} logoutHandler={props.logoutHandler} />\n              <CreateAccountPage users={users} setUsers={setUsers} />\n            </main>\n        )\n    }\n\n    if(page === 'transfer') {\n        return (\n            <main>\n                <Sidebar changePage={changePageHandler} page={page} logoutHandler={props.logoutHandler} />\n                <TransferPage users={users} setUsers={setUsers} />\n            </main>\n        )\n    }\n\n    if(page === 'deposit') {\n        return (\n            <main>\n                <Sidebar changePage={changePageHandler} page={page} logoutHandler={props.logoutHandler} />\n                <TransactPage users={users} setUsers={setUsers} notif={notif} setNotif={setNotif} type=\"add\" page={page} />\n            </main>\n        )\n    }\n\n    if(page === 'withdraw') {\n        return (\n            <main>\n                <Sidebar changePage={changePageHandler} page={page} logoutHandler={props.logoutHandler} />\n                <TransactPage users={users} setUsers={setUsers} notif={notif} setNotif={setNotif} type=\"subtract\" page={page} />\n            </main>\n        )\n    }\n}\n\nconst AccountEditModal = (props) => {\n    const { accountName, accountNumber, balance, setEditModal, setNewAccount, setIsUpdate } = props;\n    const [account, setAccount] = useState({fullname: accountName, number: accountNumber, balance: balance});\n\n    const closeModal = () => {\n        setEditModal(false);\n    }\n\n    const updateAccount = (e) => {\n        e.preventDefault();\n        console.log(\"Update\");\n        setNewAccount(account);\n        setIsUpdate(true);\n        // close modal\n        setEditModal(false);\n    }\n\n    const editAccountName = (e) => {\n        const name = e.target.value;\n        setAccount({...account, ...{fullname: name}});\n    }\n\n    const editAccountNumber = (e) => {\n        const number = e.target.value;\n        setAccount({...account, ...{number: number}});\n    }\n\n    const editAccountBalance = (e) => {\n        const balance = e.target.value;\n        setAccount({...account, ...{balance: parseFloat(balance) || 0}});\n    }\n \n    return (\n        <div className=\"overlay\">\n        <div className=\"modal\">\n            <form onSubmit={updateAccount}>\n                <h2 className=\"title\">Edit Account</h2>\n                <label>Account name</label>\n                <input name=\"account-name\" onChange={editAccountName} value={account.fullname} autoComplete=\"off\" />\n                \n                <label>Account number</label>\n                <input type=\"text\" name=\"amount\" onChange={editAccountNumber} disabled value={account.number} autoComplete=\"off\" />\n\n                <label>Balance</label>\n                <input type=\"text\" name=\"balance\" onChange={editAccountBalance} value={account.balance} autoComplete=\"off\" />\n\n                <button type=\"button\" onClick={() => closeModal()} className=\"btn2 btn-muted\">Cancel</button>\n                <button type=\"submit\" className=\"btn2\">Update Account</button>\n            </form>\n        </div>\n    </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Logo } from './Logo';\nimport { Notif } from './Notif';\n\nexport const LoginPage = (props) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n  \n    const onSubmitHandler = (event) => {\n      event.preventDefault();\n      props.loginHandler(username, password);\n    }\n  \n    const onChangeUsername = (event) => {\n      setUsername(event.target.value);\n    }\n  \n    const onChangePassword = (event) => {\n      setPassword(event.target.value);\n    }\n  \n    return (\n      <div id=\"login-page\">\n        <div id=\"login\">\n          <Logo />\n          <Notif message={props.notif.message} style={props.notif.style} />\n          <form onSubmit={onSubmitHandler}>\n            <label htmlFor=\"username\">Username</label>\n            <input id=\"username\" autoComplete=\"off\" onChange={onChangeUsername}  value={username} type=\"text\" />\n            <label htmlFor=\"password\">Password</label>\n            <input id=\"password\" autoComplete=\"off\" onChange={onChangePassword} value={password} type=\"password\" />\n            <button type=\"submit\" className=\"btn\">Login</button>\n          </form>\n        </div>\n      </div>\n    )\n}\n","import { Account } from './Account';\nimport { formatNumber } from './Utils';\n\nexport const MainClientContent = props => {\n    const {user} = props;\n    console.log(user);\n\n    const transactions = user.transactions.map((transaction, index) => {\n      const className = index % 2 === 0 ? 'even' : 'odd'\n      return <div className={`transaction-item ${className}`}>\n        <div>{transaction.date}</div>\n        <div>{transaction.title}</div>\n        <div>{transaction.type === 'debit' ? formatNumber(transaction.amount * -1) : formatNumber(transaction.amount)}</div>\n      </div>\n    });\n\n\n    return (\n      <section id=\"main-content\">\n        <h1 className=\"main\">My Account</h1>\n        <Account type={user.type} accountNumber={user.number} balance={user.balance} fullname={user.fullname} />\n        <div id=\"transactions\">\n          <h2>Transactions</h2>\n          <div id=\"transaction-div\">\n          {transactions}\n          </div>\n        </div>\n      </section>\n    )\n}\n","import { formatNumber, saveBudgetToDB } from \"./Utils\";\nimport React, {useState} from \"react\";\n\nexport const BudgetApp = (props) => {\n    const {client} = props;\n    const [budgetList, setBudgetList] = useState(client.budget || []);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [modalValue, setModalValue] = useState({title: '', amount: ''});\n    const [modalAction, setModalAction] = useState('add');\n\n    const getTotalExpenses = () => {\n        return budgetList.reduce((prev, curr) => {\n            return prev + curr.amount;\n        }, 0);\n    }\n\n    const totalExpenses = getTotalExpenses();\n    \n    const [currentBalance, setCurrentBalance] = useState(client.balance - totalExpenses);\n\n    const addBudget = (e) => {\n        e.preventDefault();\n        setModalValue({title: '', amount: ''});\n        setModalAction('add');\n        setIsModalOpen(true);\n    }\n\n    const saveBudget = (amount, title) => {\n        amount = parseFloat(amount);\n        if(amount > 0) {\n            // deduct current balance\n            setCurrentBalance(currentBalance - amount);\n            // add this budget to budgetList\n            const newBudgetList = [{title: title, amount: amount}, ...budgetList];\n            setBudgetList(newBudgetList);\n            // close\n            setIsModalOpen(false);\n            // save into localStorage this new budget\n            saveBudgetToDB(client.number, newBudgetList);\n        }\n    }\n\n    const updateBudget = ({id, amount, title}) => {\n        const budget = budgetList[id];\n        budget.title = title;\n        budget.amount = amount;\n\n        setBudgetList(budgetList);\n        saveBudgetToDB(client.number, budgetList);\n        const total = getTotalExpenses(budgetList);\n        // compute total balance\n        setCurrentBalance(client.balance - total);\n        setIsModalOpen(false);\n    }\n\n    const editRow = (index) => {\n        const budget = budgetList[index];\n        budget.id = index;\n\n        setModalValue(budget);\n        setModalAction('edit');\n        setIsModalOpen(true);\n    }\n\n    const deleteRow = (index) => {\n        // get all budgetlist except the index\n        const filteredBudget = budgetList.filter((item, budgetIndex) => {\n            return  index !== budgetIndex;\n        })\n\n        setCurrentBalance(currentBalance + budgetList[index].amount);\n        setBudgetList(filteredBudget);\n        saveBudgetToDB(client.number, filteredBudget);\n    }\n\n    const modal = isModalOpen ? <BudgetModal \n                  title={modalValue.title}\n                  id={modalValue.id}\n                  amount={modalValue.amount}\n                  modalAction={modalAction} \n                  setIsModalOpen={setIsModalOpen}\n                  saveBudget={saveBudget} \n                  updateBudget={updateBudget} /> : '';\n\n\n    const budget = budgetList.map((item, index) => {\n        const style = index % 2 === 0 ? 'even' : 'odd';\n        return (\n            <div className={`budget-row ${style}`}>\n                <div className=\"budget-title\">\n                    <button type=\"button\" onClick={() => deleteRow(index)} className=\"mr\"><i class='bx bxs-x-square' ></i></button>\n                    <button type=\"button\" onClick={() => editRow(index)} className=\"mr\"><i class='bx bx-edit-alt' ></i></button>\n                    <span onClick={() => editRow(index)}>{item.title}</span>\n                </div>\n                <div>{formatNumber(item.amount)}</div>\n            </div>\n        )\n    })\n\n    return (\n        <div id=\"main-content\">\n            <form id=\"form\" className=\"budget\">\n                <h1>Budget App</h1>\n                <div>Start budgeting your money with our built in app.</div>\n\n                <div id=\"budget\">\n                    <div className=\"budget-menu\">\n                        <div>\n                            <button className=\"btn2\" onClick={addBudget}><i className='bx bx-book-add'></i> Add budget</button>\n                        </div>\n                        <div>\n                          <label>Remaining Budget</label>\n                          <h1 className={ currentBalance < 0 ? 'danger' : '' }>{formatNumber(currentBalance)}</h1>\n                        </div>\n                    </div>\n\n                    <div className=\"budget-body\">\n                        {budget}\n                    </div>\n                </div>\n            </form>\n            {modal}\n        </div>\n    )\n}\n\nconst BudgetModal = (props) => {\n    const { saveBudget, updateBudget, setIsModalOpen, title, amount, modalAction, id} = props;\n    const [modalValue, setModalValue] = useState({id: id, title: title, amount: amount });\n    // add or edit?\n    const [action, setAction] = useState(modalAction);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if(action === 'add') {\n            saveBudget(modalValue.amount, modalValue.title);\n        }\n\n        if(action === 'edit') {\n            updateBudget(modalValue);\n\n        }\n    }\n\n    const onChangeDescription = (e) => {\n        setModalValue({...modalValue, title: e.target.value});\n    }\n\n    const onChangeAmount = (e) => {\n        setModalValue({...modalValue, amount: parseFloat(e.target.value)});\n    }\n\n    return (<div className=\"overlay\">\n        <div className=\"modal\">\n            <form onSubmit={onSubmit}>\n                <h2 className=\"title\">{action} budget</h2>\n                <label>description</label>\n                <textarea name=\"title\" onChange={onChangeDescription} defaultValue={modalValue.title}></textarea>\n                <label>Amount</label>\n                <input type=\"number\" name=\"amount\" onChange={onChangeAmount} value={modalValue.amount} autoComplete=\"off\" />\n                <button type=\"button\" onClick={() => setIsModalOpen(false)} className=\"btn2 btn-muted\">Cancel</button>\n                <button type=\"submit\" className=\"btn2\">{action} Budget</button>\n            </form>\n        </div>\n    </div>\n    )\n}\n","import React, {useState} from 'react';\nimport { Sidebar } from './Sidebar';\nimport { MainClientContent } from './MainClientContent';\nimport { findAccount } from './Utils';\nimport { TransferPage } from './TransferPage';\nimport { BudgetApp } from './BudgetApp';\n\nexport const ClientDashboard = (props) => {\n    const { logout, client, setClient } = props;\n    const [users, setUsers] = useState(props.users);\n    const [ page, setPage ] = useState('home');\n\n  \n    const changePageHandler = (pageName) => {\n      setPage(pageName);\n      const currentUser = findAccount(client.number);\n      setClient(currentUser);\n    }\n  \n    if(page === 'home') {\n      \n      return (\n        <main>\n          <Sidebar changePage={changePageHandler} page={page} user={client} logoutHandler={props.logout} />\n          <MainClientContent user={client} />\n        </main>\n      )\n    }\n  \n    if(page === 'budget') {\n      return (\n        <main>\n          <Sidebar changePage={changePageHandler} page={page} user={client} logoutHandler={props.logout} />\n          <BudgetApp client={client} />\n        </main>\n      )\n    }\n  \n    if(page === 'transfer') {\n      return (\n        <main>\n          <Sidebar changePage={changePageHandler} page={page} user={client} logoutHandler={props.logout} />\n          <TransferPage isClient=\"true\" client={client} setClient={setClient} users={users} setUsers={setUsers}  />\n        </main>\n      )\n    }\n}\n","import React, {useState} from 'react';\nimport DATA from '../data';\nimport { Dashboard } from './Dashboard';\nimport { LoginPage } from './LoginPage';\nimport { ClientDashboard } from './ClientDashboard';\n\nexport const Authenticate = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [notif, setNotif] = useState({message: '', style: ''});\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [client, setClient] = useState(null);\n    const localUsers = localStorage.getItem('users');\n    \n    if(!localUsers) {\n      localStorage.setItem('users', JSON.stringify(DATA));\n    }\n\n    const clients = JSON.parse(localStorage.getItem('users'));\n\n    const isLoginSuccess = (email, password) => {\n      let isFound = false;\n\n      clients.forEach(user => {\n        if(user.email === email && user.password === password) {\n          if(user.isAdmin) {\n            setIsAdmin(true);\n            setClient(user);\n            isFound = true;\n          }\n          else {\n            setIsAdmin(false);\n            setClient(user)\n            isFound = true;\n          }\n          setNotif('');\n        }\n      });\n  \n      if(!isFound) setNotif({message: 'Wrong username and password.', style: 'danger'});\n      return isFound;\n    }\n  \n    const login = (username, password) => {\n        if(isLoginSuccess(username, password)) {\n            setIsLoggedIn(true);\n        }\n    }\n  \n    const logout = () => {\n        setIsLoggedIn(false);\n        setIsAdmin(false);\n        localStorage.removeItem('client')\n        setNotif({message: 'You have logged out.', style: 'success'});\n    }\n  \n    if(isLoggedIn) {\n      localStorage.setItem('currentUser', JSON.stringify(client));\n      if(isAdmin) {\n        return <Dashboard users={clients} logoutHandler={logout} />\n      } else {\n        \n        return <ClientDashboard client={client} users={clients} setClient={setClient} logout={logout} />\n      }\n    } else {\n      return <LoginPage loginHandler={login} notif={notif} isLoggedIn={isLoggedIn} />\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { Authenticate } from './components/Authenticate';\n\nfunction App() {\n  return (\n    <Authenticate />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}