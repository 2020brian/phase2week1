{"version":3,"sources":["data.js","components/Logo.js","components/Sidebar.js","components/Utils.js","components/Account.js","components/MainContent.js","components/Notif.js","components/CreateAccountPage.js","components/TransferPage.js","components/TransactPage.js","components/Dashboard.js","components/LoginPage.js","components/MainClientContent.js","components/BudgetApp.js","components/ClientDashboard.js","components/Authenticate.js","App.js","reportWebVitals.js","index.js"],"names":["DATA","email","password","fullname","type","number","balance","isAdmin","budget","title","amount","Logo","id","className","Sidebar","props","user","logoutHandler","changePage","menu","ClientMenu","onClickHandler","page","icon","text","SideMenu","SideLink","onClick","event","preventDefault","href","formatNumber","toLocaleString","undefined","maximumFractionDigits","trim","parseFloat","replace","findAccount","users","JSON","parse","localStorage","getItem","transact","setUsers","multiplier","setItem","stringify","capitalize","str","charAt","toUpperCase","slice","saveBudgetToDB","accountNumber","newBudget","filteredUsers","filter","dbUser","push","addUserToUsers","Account","AccountHolder","AccountType","AccountNumber","AccountBalance","MainContent","bankAccounts","map","index","Notif","style","message","CreateAccountPage","createRandomAccount","Math","floor","random","useState","notif","setNotif","initialBalance","setInitialBalance","initialAccountNumber","setInitialAccountNumber","onSubmit","target","elements","localUsers","alreadyExists","forEach","row","unshift","createNewAccount","value","accountType","htmlFor","autoComplete","name","disabled","onChange","TransferPage","isClient","client","setClient","receivers","setReceivers","sender","setSender","receiver","setReceiver","transferAmount","setTransferAmount","senders","newReceivers","senderField","newUsers","senderSuccess","e","transfer","TransactPage","accounts","setAccounts","selectedAccount","setSelectedAccount","depositAmount","setDepositAmount","options","account","selectedNumber","Dashboard","setPage","changePageHandler","pageName","LoginPage","username","setUsername","setPassword","loginHandler","MainClientContent","BudgetApp","budgetList","setBudgetList","isModalOpen","setIsModalOpen","balanceWithBudget","reduce","prev","curr","currentBalance","setCurrentBalance","modal","saveBudget","newBudgetList","item","console","log","filteredBudget","budgetIndex","deleteRow","class","BudgetModal","description","ClientDashboard","logout","currentUser","Authenticate","isLoggedIn","setIsLoggedIn","setIsAdmin","clients","removeItem","isFound","isLoginSuccess","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAoEeA,EApEF,CACT,CACIC,MAAO,kBACPC,SAAU,SACVC,SAAU,gBACVC,KAAM,eACNC,OAAQ,cACRC,QAAS,IACTC,SAAS,GAEb,CACIN,MAAO,iBACPC,SAAU,SACVC,SAAU,kBACVC,KAAM,eACNC,OAAQ,cACRC,QAAS,WACTC,SAAS,GAEb,CACIN,MAAO,kBACPC,SAAU,SACVC,SAAU,iBACVC,KAAM,eACNC,OAAQ,cACRC,QAAS,UACTC,SAAS,EACTC,OAAQ,CACJ,CACIC,MAAO,cACPC,OAAQ,MAEZ,CACID,MAAO,oCACPC,OAAQ,OAIpB,CACIT,MAAO,mBACPC,SAAU,SACVC,SAAU,kBACVC,KAAM,eACNC,OAAQ,cACRC,QAAS,UACTC,SAAS,GAEb,CACIN,MAAO,mBACPC,SAAU,SACVC,SAAU,gBACVC,KAAM,gBACNC,OAAQ,cACRC,QAAS,UACTC,SAAS,GAGb,CACIN,MAAO,kBACPC,SAAU,SACVC,SAAU,eACVC,KAAM,gBACNC,OAAQ,cACRC,QAAS,UACTC,SAAS,I,OC9DJI,EAAO,WAChB,OACI,qBAAIC,GAAG,OAAP,UAAc,mBAAGC,UAAU,uBAA3B,kBCDKC,EAAU,SAACC,GAAW,IACvBC,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,cAAeC,EAAeH,EAAfG,WACzBC,EAAO,KAYX,OATIH,IACAG,EAAO,cAAC,EAAD,CAAUD,WAAYA,EAAYD,cAAeA,KAIzDD,IACCG,EAAO,cAAC,EAAD,CAAYD,WAAYA,EAAYD,cAAeA,KAI1D,0BAASL,GAAG,YAAZ,UACI,cAAC,EAAD,IACCO,MAKAC,EAAa,SAACL,GAAW,IAC3BG,EAA6BH,EAA7BG,WAAYD,EAAiBF,EAAjBE,cAEnB,OACI,+BACI,cAAC,EAAD,CAAUI,eAAgBH,EAAYI,KAAK,OAAOC,KAAK,aAAaC,KAAK,SACzE,cAAC,EAAD,CAAUH,eAAgBH,EAAYI,KAAK,SAASC,KAAK,cAAcC,KAAK,eAC5E,cAAC,EAAD,CAAUH,eAAgBH,EAAYI,KAAK,WAAWC,KAAK,iBAAiBC,KAAK,kBACjF,cAAC,EAAD,CAAUH,eAAgBJ,EAAeM,KAAK,gBAAgBC,KAAK,eAKlEC,EAAW,SAACV,GAAW,IACzBG,EAA6BH,EAA7BG,WAAYD,EAAiBF,EAAjBE,cACnB,OACI,+BACI,cAAC,EAAD,CAAUI,eAAgBH,EAAYI,KAAK,OAAOC,KAAK,aAAaC,KAAK,SACzE,cAAC,EAAD,CAAUH,eAAgBH,EAAYI,KAAK,iBAAiBC,KAAK,iBAAiBC,KAAK,mBACvF,cAAC,EAAD,CAAUH,eAAgBH,EAAYI,KAAK,WAAWC,KAAK,iBAAiBC,KAAK,kBACjF,cAAC,EAAD,CAAUH,eAAgBH,EAAYI,KAAK,UAAUC,KAAK,cAAcC,KAAK,YAC7E,cAAC,EAAD,CAAUH,eAAgBH,EAAYI,KAAK,WAAWC,KAAK,uBAAuBC,KAAK,aACvF,cAAC,EAAD,CAAUH,eAAgBJ,EAAeM,KAAK,gBAAgBC,KAAK,eAKlEE,EAAW,SAACX,GAAW,IACzBQ,EAAoBR,EAApBQ,KAAMC,EAAcT,EAAdS,KAAMF,EAAQP,EAARO,KAYnB,OACI,6BAAI,oBAAGK,QAXX,SAAmBC,GACZN,GACCM,EAAMC,iBACNd,EAAMM,eAAeC,KAErBM,EAAMC,iBACNd,EAAMM,mBAKiBS,KAAK,IAA5B,UAAgC,mBAAGjB,UAAWU,IAA9C,IAA2DC,Q,OClEhE,SAASO,EAAa1B,GAEzB,OAAOA,EAAO2B,oBAAeC,EAAW,CAACC,sBAAuB,IAG7D,SAASC,EAAK9B,GACjB,OAAO+B,WAAW/B,EAAOgC,QAAQ,KAAM,MAAQ,EAG5C,SAASC,EAAYjC,GACxB,IADgC,EAC1BkC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UADd,cAGdJ,GAHc,IAGhC,IAAI,EAAJ,qBAAyB,CAAC,IAAhBvB,EAAe,QACrB,GAAGA,EAAKX,SAAWA,EACf,OAAOW,GALiB,8BAShC,OAAO,EAGJ,SAAS4B,EAASvC,EAAQK,EAAQN,GACxC,IAD8CyC,EAC/C,uDADwD,KAEhDC,EAAa,EACL,QAAT1C,IAAgB0C,EAAa,GACpB,aAAT1C,IAAqB0C,GAAc,GAEtC,IALJ,EAKUP,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UALlD,cAOsBJ,GAPtB,IAOI,IAAI,EAAJ,qBAAyB,CAAC,IAAhBvB,EAAe,QAClBA,EAAKX,SAAWA,IACfW,EAAKV,SAAWI,EAASoC,IATrC,8BAYID,EAASN,GACTG,aAAaK,QAAQ,QAASP,KAAKQ,UAAUT,IAG1C,SAASU,EAAWC,GAEvB,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GAG5C,SAASC,EAAeC,EAAeC,GAE1C,IAAMxC,EAAOsB,EAAYiB,GACzBvC,EAAKR,OAASgD,EACd,IAAMC,EAIV,SAAwBzC,GACpB,IAEMyC,EAFQjB,KAAKC,MAAMC,aAAaC,QAAQ,UAElBe,QAAO,SAAAC,GAC/B,OAAOA,EAAOtD,SAAWW,EAAKX,UAIlC,OADAoD,EAAcG,KAAK5C,GACZyC,EAZeI,CAAe7C,GACrC0B,aAAaK,QAAQ,QAASP,KAAKQ,UAAUS,IC5C1C,IAAMK,EAAU,SAAC/C,GAAW,IACxBX,EAA0CW,EAA1CX,KAAMmD,EAAoCxC,EAApCwC,cAAejD,EAAqBS,EAArBT,QAASH,EAAYY,EAAZZ,SAErC,OACE,sBAAKU,UAAU,UAAf,UACI,sBAAKA,UAAU,UAAf,UACI,cAAC,EAAD,CAAeV,SAAUA,IACzB,cAAC,EAAD,CAAaC,KAAMA,IACnB,cAAC,EAAD,CAAemD,cAAeA,OAGlC,cAAC,EAAD,CAAgBjD,QAASyB,EAAazB,SAKnCyD,EAAgB,SAAChD,GAC1B,OACE,6BAAKA,EAAMZ,YAKJ6D,EAAc,SAACjD,GACxB,OACE,6BAAKA,EAAMX,QAKJ6D,EAAgB,SAAClD,GAC1B,OACE,8BAAMA,EAAMwC,iBAKLW,EAAiB,SAACnD,GAC3B,IAAMT,EAAUS,EAAMT,QACtB,OACE,qBAAKO,UAAU,UAAf,SAA0BP,KC1CnB6D,EAAc,SAACpD,GACxB,IAEMqD,EAFQrD,EAAMwB,MAEO8B,KAAI,SAACrD,EAAMsD,GACpC,OAAO,cAAC,EAAD,CAAqBnE,SAAUa,EAAKb,SACzCC,KAAMY,EAAKZ,KACXmD,cAAevC,EAAKX,OACpBC,QAASU,EAAKV,SAHKgE,MAMvB,OACE,yBAAS1D,GAAG,eAAZ,SACGwD,KCdIG,EAAQ,SAACxD,GAClB,OAAO,qBAAKF,UAAS,gBAAWE,EAAMyD,OAA/B,SAAyCzD,EAAM0D,WCG7CC,EAAoB,SAAC3D,GAC9B,IAAM4D,EAAsB,WACxB,OAAOC,KAAKC,MAAM,IAA6B,IAAhBD,KAAKE,WAFA,EAKdC,mBAAS,CAACN,QAAS,+BAAgCD,MAAO,SAL5C,mBAKjCQ,EALiC,KAK1BC,EAL0B,OAMIF,mBAAS,GANb,mBAMjCG,EANiC,KAMjBC,EANiB,OAOgBJ,mBAASJ,KAPzB,mBAOjCS,EAPiC,KAOXC,EAPW,KA6DxC,OACI,yBAASzE,GAAG,eAAZ,SACI,uBAAMA,GAAG,OAAO0E,SA/BI,SAAC1D,GACzBA,EAAMC,iBACN,IAAMb,EAAOY,EAAM2D,OAAOC,UAzBL,SAACxE,GACtB,IAAMyE,EAAa1E,EAAMwB,MAErBmD,GAAgB,EAOpB,OANAD,EAAWE,SAAQ,SAAAC,GACZA,EAAI3F,QAAUe,EAAKf,QAClByF,GAAgB,MAIrBA,GACCT,EAAS,CAACR,QAAS,wCAAyCD,MAAO,YAC5D,IAEPS,EAAS,IACTQ,EAAWI,QAAQ7E,GACnBD,EAAM8B,SAAS4C,GACf/C,aAAaK,QAAQ,QAASP,KAAKQ,UAAUyC,IAC7CR,EAAS,CAACR,QAAS,sBAAuBD,MAAO,aAC1C,IAkBKsB,CAVA,CACZ7F,MAAOe,EAAKf,MAAM8F,MAClB7F,SAAUc,EAAKd,SAAS6F,MACxB5F,SAAUa,EAAKb,SAAS4F,MACxB3F,KAAMY,EAAKgF,YAAYD,MACvB1F,OAAQW,EAAKuC,cAAcwC,MAC3BxF,SAAS,EACTD,QAAS6B,EAAKnB,EAAKkE,eAAea,WAKlC/E,EAAKf,MAAM8F,MAAQ,GACnB/E,EAAKd,SAAS6F,MAAQ,GACtB/E,EAAKb,SAAS4F,MAAQ,GACtB/E,EAAKuC,cAAcwC,MAAQV,EAAwBV,KACnD3D,EAAKkE,eAAea,MAAQZ,EAAkB,KAW9C,UACI,gDACA,cAAC,EAAD,CAAOV,QAASO,EAAMP,QAASD,MAAOQ,EAAMR,QAC5C,uBAAOyB,QAAQ,WAAf,uBACA,uBAAOrF,GAAG,WAAWR,KAAK,OAAO8F,aAAa,MAAMC,KAAK,aACzD,uBACA,uBAAOF,QAAQ,iBAAf,4CACA,uBAAOrF,GAAG,iBAAiBuF,KAAK,gBAAgBtF,UAAU,QAAQkF,MAAOX,EAAsBhF,KAAK,SAASgG,UAAQ,IAErH,uBAAOH,QAAQ,UAAf,6BACA,uBAAOrF,GAAG,UAAUR,KAAK,OAAO2F,MAAOhE,EAAamD,GAAiBmB,SAjBxD,SAAAzE,GACrB,IAAMlB,EAASyB,EAAKP,EAAM2D,OAAOQ,QAAU,EAC3CZ,EAAkBzE,IAeuFyF,KAAK,iBAAiBtF,UAAU,UAEjI,uBAAOoF,QAAQ,eAAf,0BACA,yBAAQE,KAAK,cAAb,UACI,wBAAQJ,MAAM,mBAAd,8BACA,wBAAQA,MAAM,mBAAd,gCAEJ,uBACA,uBAAOE,QAAQ,QAAf,2BACA,uBAAOrF,GAAG,QAAQR,KAAK,QAAQ+F,KAAK,UACpC,uBAAOF,QAAQ,WAAf,sBACA,uBAAOrF,GAAG,WAAWR,KAAK,WAAW+F,KAAK,aAC1C,uBAAOJ,MAAM,iBAAiBlF,UAAU,MAAMT,KAAK,iBCrFtDkG,EAAe,SAACvF,GAAW,IAC7BwF,EAA+BxF,EAA/BwF,SAAUC,EAAqBzF,EAArByF,OADkB,GACGzF,EAAb0F,UACC1B,mBAAShE,EAAMwB,QAFN,mBAE5BA,EAF4B,KAErBM,EAFqB,OAGDkC,mBAASxC,GAHR,mBAG5BmE,EAH4B,KAGjBC,EAHiB,OAIP5B,mBAAUwB,EAAWC,EAAS,CAAClG,QAAS,IAJjC,mBAI5BsG,EAJ4B,KAIpBC,EAJoB,OAKH9B,mBAAS,CAACzE,QAAS,IALhB,mBAK5BwG,EAL4B,KAKlBC,EALkB,OAMThC,mBAAS,CAACN,QAAS,8CAA+CD,MAAO,SANhE,mBAM5BQ,EAN4B,KAMrBC,EANqB,OAOSF,mBAAS,GAPlB,mBAO5BiC,EAP4B,KAOZC,EAPY,KA0C/BC,EAAU,KACVX,IACAW,EAAU3E,EAAM8B,KAAI,SAAArD,GAChB,OACI,yBAAQ+E,MAAO/E,EAAKX,OAApB,UAA6BW,EAAKb,SAAlC,KAA8Ca,EAAKX,cAK/D,IAAM8G,EAAeT,EAAUrC,KAAI,SAAAyC,GAC/B,OACI,yBAAQf,MAAOe,EAASzG,OAAxB,UAAiCyG,EAAS3G,SAA1C,KAAsD2G,EAASzG,aAsDnE+G,EACA,yBAAQf,SAnGW,SAACzE,GACpB,IAAM2B,EAAgB3B,EAAM2D,OAAOQ,MAE7BsB,EAAW,GACbT,EAAS,KAEbrE,EAAMoD,SAAQ,SAAA3E,GACPA,EAAKX,SAAWkD,EACfqD,EAAS5F,EAETqG,EAASzD,KAAK5C,MAItB6F,EAAUD,GACVD,EAAaU,GACbN,EAAY,CAAC1G,OAAQ,EAAGC,QAAS,KAmFC6F,KAAK,SAAvC,UACI,mDACCe,KAOT,OAJGX,IACCa,EAAc,uBAAOhH,KAAK,OAAO+F,KAAK,SAASJ,MAAK,UAAKS,EAAOrG,SAAZ,aAAyBqG,EAAOnG,QAAU+F,UAAQ,KAItG,yBAASxF,GAAG,eAAZ,SACI,uBAAMA,GAAG,OAAO0E,SA9DH,SAAA1D,GACjBA,EAAMC,iBACN,IAAMnB,EAAS0B,WAAWR,EAAM2D,OAAOC,SAAS9E,OAAOqF,MAAM1D,QAAQ,KAAM,KAC3E,GAAG3B,GAAU,EAAG,OAAO,EAGvB,IAAM6B,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAE9C,GAAqB,IAAlBiE,EAAOvG,QAAoC,IAApByG,EAASzG,QAAgByG,EAASzG,OAAQ,CAEhE,IAAIiH,GAAgB,EACpB/E,EAAMoD,SAAQ,SAAA3E,GACPA,EAAKX,SAAWuG,EAAOvG,QACnBW,EAAKV,QAAUI,GAAU,IACxBM,EAAKV,SAAWI,EAChBmG,EAAU7F,GACVsG,GAAgB,MAMzBA,GACC/E,EAAMoD,SAAQ,SAAA3E,GACPA,EAAKX,SAAWyG,EAASzG,SACxBW,EAAKV,SAAWI,EAChBqG,EAAY/F,OAIpBiE,EAAS,CAAER,QAAS,uBAAwBD,MAAO,YACnD3B,EAASN,GACTxB,EAAM8B,SAASN,GACfG,aAAaK,QAAQ,QAASP,KAAKQ,UAAUT,IAC7C0E,EAAkB,IAGlBhC,EAAS,CAACR,QAAS,mBAAoBD,MAAO,gBAIlDS,EAAS,CAACR,QAAS,sDAAuDD,MAAO,YAqBjF,UACI,+CAEA,cAAC,EAAD,CAAOC,QAASO,EAAMP,QAASD,MAAOQ,EAAMR,QAC5C,wCACA,kDACC4C,EAED,oDACA,uBAAOhH,KAAK,OAAOS,UAAU,QAAQkF,MAAOhE,EAAa6E,EAAOtG,SAAU8F,UAAQ,IAElF,uDACA,uBAAOhG,KAAK,OAAO+F,KAAK,SAASJ,MAAOhE,EAAaiF,GAAiBX,SA7B/D,SAACkB,GAChB,IAAMC,EAAWpF,WAAWmF,EAAEhC,OAAOQ,MAAM1D,QAAQ,KAAM,MAAQ,EACjE4E,EAAkBO,IA2BkFtB,aAAa,MAAMrF,UAAU,oBAEzH,qBAAKA,UAAU,gBAAf,SAA+B,mBAAGA,UAAU,2BAC5C,0CACA,kDACA,yBAAQkF,MAAOe,EAASzG,QAAU,EAAGgG,SA5GxB,SAAAzE,GACrB,IAAM2B,EAAgB3B,EAAM2D,OAAOQ,MAE/Be,EAAW,KAEfvE,EAAMoD,SAAQ,SAAA3E,GACPA,EAAKX,SAAWkD,IACfuD,EAAW9F,MAInB+F,EAAYD,IAiG6DX,KAAK,WAAtE,UACI,qDACCgB,KAEL,oDACA,uBAAO/G,KAAK,OAAOS,UAAU,QAAQkF,MAAOhE,EAAa+E,EAASxG,SAAU8F,UAAQ,IACpF,uBAAOhG,KAAK,SAASS,UAAU,MAAMkF,MAAM,wBC9I9C0B,EAAe,SAAC1G,GACzB,IAAMwB,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UACxCsC,EAAWlE,EAAMkE,SACjBD,EAAQjE,EAAMiE,MAHe,EAIHD,mBAASxC,GAJN,mBAI5BmF,EAJ4B,KAIlBC,EAJkB,OAKW5C,mBAAS,CAACzE,QAAS,IAL9B,mBAK5BsH,EAL4B,KAKXC,EALW,OAMO9C,mBAAS,GANhB,mBAM5B+C,EAN4B,KAMbC,EANa,KAQ7BC,EAAUN,EAASrD,KAAI,SAAArD,GACzB,OAAO,yBAAQ+E,MAAO/E,EAAKX,OAApB,UAA6BW,EAAKb,SAAlC,KAA8Ca,EAAKX,aA0CxDkB,EAAsB,aAAfR,EAAMO,KAAsB,uBAAyB,qBAElE,OACI,yBAASV,GAAG,eAAZ,SACI,uBAAMA,GAAG,OAAO0E,SA1BA,SAACiC,GACrBA,EAAE1F,iBACF,IAAMnB,EAASyB,EAAKoF,EAAEhC,OAAOC,SAAS9E,OAAOqF,OACvCxC,EAAgBgE,EAAEhC,OAAOC,SAASyC,QAAQlC,MAEhD,GAAGrF,EAAS,GAAuB,MAAlB6C,EAAuB,CAAC,IAAD,gBAClBmE,GADkB,IACpC,IAAI,EAAJ,qBAA4B,CAAC,IAAnB1G,EAAkB,QACxB,GAAGA,EAAKX,SAAWkD,EAAe,CAC9BX,EAAS5B,EAAKX,OAAQK,EAAQK,EAAMX,KAAMW,EAAM8B,UAChDgF,EAAmBvF,EAAYtB,EAAKX,SACpCsH,EAAYnF,KAAKC,MAAMC,aAAaC,QAAQ,WAC5CoF,EAAiB,GACjB9C,EAAS,CAACR,QAAQ,GAAD,OAAKxB,EAAWlC,EAAMO,MAAtB,gBAA2CkD,MAAO,YACnE,QAR4B,oCAapCS,EAAS,CAACR,QAAQ,GAAD,OAAKxB,EAAWlC,EAAMO,MAAtB,YAAuCkD,MAAO,YAQ/D,UACI,6BAAKzD,EAAMO,OACX,cAAC,EAAD,CAAOmD,QAASO,EAAMP,QAASD,MAAOQ,EAAMR,QAC5C,4CACA,yBAAQ2B,KAAK,UAAUE,SA/CZ,SAACkB,GACpBtC,EAASD,GACT,IAF0B,EAEpBkD,EAAiBX,EAAEhC,OAAOQ,MAFN,cAIR2B,GAJQ,IAI1B,IAAI,EAAJ,qBAA4B,CAAC,IAAnB1G,EAAkB,QACxB,GAAGA,EAAKX,SAAW6H,EAAgB,CAC/BL,EAAmB7G,GACnB,QAPkB,gCA+ClB,UACI,wBAAQ+E,MAAM,IAAd,4BACCiC,KAGL,oDACA,uBAAO5H,KAAK,OAAOS,UAAU,QAAQkF,MAAOhE,EAAa6F,EAAgBtH,SAAU8F,UAAQ,IAE3F,qBAAKvF,UAAU,gBAAf,SAA+B,mBAAGA,UAAWU,MAC7C,+CAAkBR,EAAMO,QACxB,uBAAOlB,KAAK,OAAO+F,KAAK,SAASJ,MAAO+B,EAAezB,SA7CjD,SAACkB,GACf,IAAM7G,EAASqB,EAAaI,EAAKoF,EAAEhC,OAAOQ,QAC1CgC,EAAiBrH,IA2CmEwF,aAAa,MAAMrF,UAAU,oBACzG,wBAAQT,KAAK,SAASS,UAAU,MAAhC,SAAuCE,EAAMO,aCnEhD6G,EAAY,SAACpH,GAAW,IAAD,EACRgE,mBAAS,QADD,mBACzBzD,EADyB,KACnB8G,EADmB,OAENrD,mBAAShE,EAAMwB,OAFT,mBAEzBA,EAFyB,KAElBM,EAFkB,OAGNkC,mBAAS,CAACN,QAAS,GAAID,MAAO,KAHxB,mBAGzBQ,EAHyB,KAGlBC,EAHkB,KAK1BoD,EAAoB,SAACC,GACvBF,EAAQE,GAEQ,aAAbA,GACCrD,EAAS,CAACR,QAAS,4CAA6CD,MAAO,SAG3D,YAAb8D,GACCrD,EAAS,CAACR,QAAS,sCAAuCD,MAAO,UAKzE,MAAY,SAATlD,EAEK,iCACE,cAAC,EAAD,CAASJ,WAAYmH,EAAmBpH,cAAeF,EAAME,gBAC7D,cAAC,EAAD,CAAasB,MAAOA,OAKlB,mBAATjB,EAEK,iCACE,cAAC,EAAD,CAASJ,WAAYmH,EAAmBpH,cAAeF,EAAME,gBAC7D,cAAC,EAAD,CAAmBsB,MAAOA,EAAOM,SAAUA,OAKzC,aAATvB,EAEK,iCACI,cAAC,EAAD,CAASJ,WAAYmH,EAAmBpH,cAAeF,EAAME,gBAC7D,cAAC,EAAD,CAAcsB,MAAOA,EAAOM,SAAUA,OAKtC,YAATvB,EAEK,iCACI,cAAC,EAAD,CAASJ,WAAYmH,EAAmBpH,cAAeF,EAAME,gBAC7D,cAAC,EAAD,CAAcsB,MAAOA,EAAOM,SAAUA,EAAUmC,MAAOA,EAAOC,SAAUA,EAAU7E,KAAK,MAAMkB,KAAMA,OAKnG,aAATA,EAEK,iCACI,cAAC,EAAD,CAASJ,WAAYmH,EAAmBpH,cAAeF,EAAME,gBAC7D,cAAC,EAAD,CAAcsB,MAAOA,EAAOM,SAAUA,EAAUmC,MAAOA,EAAOC,SAAUA,EAAU7E,KAAK,WAAWkB,KAAMA,YAJpH,GCzDSiH,EAAY,SAACxH,GAAW,IAAD,EACAgE,mBAAS,IADT,mBACzByD,EADyB,KACfC,EADe,OAEA1D,mBAAS,IAFT,mBAEzB7E,EAFyB,KAEfwI,EAFe,KAiBhC,OACE,qBAAK9H,GAAG,aAAR,SACE,sBAAKA,GAAG,QAAR,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAO6D,QAAS1D,EAAMiE,MAAMP,QAASD,MAAOzD,EAAMiE,MAAMR,QACxD,uBAAMc,SAlBY,SAAC1D,GACvBA,EAAMC,iBACNd,EAAM4H,aAAaH,EAAUtI,IAgBzB,UACE,uBAAO+F,QAAQ,WAAf,sBACA,uBAAOrF,GAAG,WAAWsF,aAAa,MAAMG,SAfvB,SAACzE,GACxB6G,EAAY7G,EAAM2D,OAAOQ,QAckDA,MAAOyC,EAAUpI,KAAK,SAC3F,uBAAO6F,QAAQ,WAAf,sBACA,uBAAOrF,GAAG,WAAWsF,aAAa,MAAMG,SAbvB,SAACzE,GACxB8G,EAAY9G,EAAM2D,OAAOQ,QAYiDA,MAAO7F,EAAUE,KAAK,aAC1F,wBAAQA,KAAK,SAASS,UAAU,MAAhC,4BC7BC+H,EAAoB,SAAA7H,GAAU,IAChCC,EAAQD,EAARC,KAEP,OACE,0BAASJ,GAAG,eAAZ,UACE,oBAAIC,UAAU,OAAd,wBACA,cAAC,EAAD,CAAST,KAAMY,EAAKZ,KAAMmD,cAAevC,EAAKX,OAAQC,QAASU,EAAKV,QAASH,SAAUa,EAAKb,e,OCLvF0I,EAAY,SAAC9H,GAAW,IAC1ByF,EAAUzF,EAAVyF,OADyB,EAEIzB,mBAASyB,EAAOhG,QAAU,IAF9B,mBAEzBsI,EAFyB,KAEbC,EAFa,OAGMhE,oBAAS,GAHf,mBAGzBiE,EAHyB,KAGZC,EAHY,KAK1BC,EAAoBJ,EAAWK,QAAO,SAACC,EAAMC,GAC/C,OAAOD,EAAOC,EAAK3I,SACpB,GAP6B,EASYqE,mBAASyB,EAAOlG,QAAU4I,GATtC,mBASzBI,EATyB,KASTC,EATS,KAkD1BC,EAAQR,EAAc,cAAC,EAAD,CACdvI,MAAM,eACNwI,eAAgBA,EAChBQ,WArCK,SAAC/I,EAAQD,GAExB,IADAC,EAAS0B,WAAW1B,IACR,EAAG,CAEX6I,EAAkBD,EAAiB5I,GAEnC,IAAMgJ,EAAa,CAAI,CAACjJ,MAAOA,EAAOC,OAAQA,IAA3B,mBAAuCoI,IAC1DC,EAAcW,GAEdT,GAAe,GAEf3F,EAAekD,EAAOnG,OAAQqJ,OA0BK,GAGrClJ,EAASsI,EAAWzE,KAAI,SAACsF,EAAMrF,GACjC,IAAME,EAAQF,EAAQ,IAAM,EAAI,OAAS,MACzC,OACI,sBAAKzD,UAAS,qBAAgB2D,GAA9B,UACI,sBAAK3D,UAAU,eAAf,UACI,wBAAQT,KAAK,SAASuB,QAAS,kBA1B7B,SAAC2C,GACfsF,QAAQC,IAAI,SAAUvF,GAEtB,IAAMwF,EAAiBhB,EAAWpF,QAAO,SAACiG,EAAMI,GAC5C,OAAQzF,IAAUyF,KAGtBH,QAAQC,IAAIP,EAAgBR,EAAWxE,GAAO5D,QAC9C6I,EAAkBD,EAAiBR,EAAWxE,GAAO5D,QAErDqI,EAAce,GAEdxG,EAAekD,EAAOnG,OAAQyJ,GAcmBE,CAAU1F,IAAQzD,UAAU,KAAjE,SAAsE,mBAAGoJ,MAAM,sBAC/E,wBAAQ7J,KAAK,SAASuB,QAAS,kBA/B9B4F,EA+B4CjD,OA9BzDsF,QAAQC,IAAI,OAAQtC,GADR,IAACA,GA+BoD1G,UAAU,KAA/D,SAAoE,mBAAGoJ,MAAM,qBAC5EN,EAAKlJ,SAEV,8BAAMsB,EAAa4H,EAAKjJ,gBAKpC,OACI,sBAAKE,GAAG,eAAR,UACI,uBAAMA,GAAG,OAAOC,UAAU,SAA1B,UACI,4CACA,oFAEA,sBAAKD,GAAG,SAAR,UACI,sBAAKC,UAAU,cAAf,UACI,8BACI,yBAAQA,UAAU,OAAOc,QApE/B,SAAC4F,GACfA,EAAE1F,iBACFoH,GAAe,IAkEK,UAA6C,mBAAGpI,UAAU,mBAA1D,mBAEJ,gCACE,qDACA,6BAAKkB,EAAauH,WAIxB,qBAAKzI,UAAU,cAAf,SACKL,UAIZgJ,MAKPU,EAAc,SAACnJ,GAAW,IACrBN,EAAqCM,EAArCN,MAAOgJ,EAA8B1I,EAA9B0I,WAAYR,EAAkBlI,EAAlBkI,eAK1B,OAAQ,qBAAKpI,UAAU,UAAf,SACJ,qBAAKA,UAAU,QAAf,SACI,uBAAMyE,SANG,SAACiC,GACdA,EAAE1F,iBACF4H,EAAWlC,EAAEhC,OAAOC,SAAS9E,OAAOqF,MAAOwB,EAAEhC,OAAOC,SAAS2E,YAAYpE,QAIrE,UACI,6BAAKtF,IACL,gDACA,0BAAU0F,KAAK,gBACf,2CACA,uBAAO/F,KAAK,SAAS+F,KAAK,SAASD,aAAa,QAChD,wBAAQ9F,KAAK,SAASuB,QAAS,kBAAMsH,GAAe,IAAQpI,UAAU,iBAAtE,oBACA,wBAAQT,KAAK,SAASS,UAAU,OAAhC,4BC5GHuJ,EAAkB,SAACrJ,GACUA,EAA9BsJ,OAD+B,IACvB7D,EAAsBzF,EAAtByF,OAAQC,EAAc1F,EAAd0F,UADc,EAEZ1B,mBAAShE,EAAMwB,OAFH,mBAE/BA,EAF+B,KAExBM,EAFwB,OAGZkC,mBAAS,QAHG,mBAG9BzD,EAH8B,KAGxB8G,EAHwB,KAMhCC,EAAoB,SAACC,GACzBF,EAAQE,GACR,IAAMgC,EAAchI,EAAYkE,EAAOnG,QACvCoG,EAAU6D,IAGZ,MAAY,SAAThJ,EAGC,iCACE,cAAC,EAAD,CAASJ,WAAYmH,EAAmBrH,KAAMwF,EAAQvF,cAAeF,EAAMsJ,SAC3E,cAAC,EAAD,CAAmBrJ,KAAMwF,OAKnB,WAATlF,EAEC,iCACE,cAAC,EAAD,CAASJ,WAAYmH,EAAmBrH,KAAMwF,EAAQvF,cAAeF,EAAMsJ,SAC3E,cAAC,EAAD,CAAW7D,OAAQA,OAKb,aAATlF,EAEC,iCACE,cAAC,EAAD,CAASJ,WAAYmH,EAAmBrH,KAAMwF,EAAQvF,cAAeF,EAAMsJ,SAC3E,cAAC,EAAD,CAAc9D,SAAS,OAAOC,OAAQA,EAAQC,UAAWA,EAAWlE,MAAOA,EAAOM,SAAUA,YAJlG,GChCS0H,EAAe,WAAO,IAAD,EACMxF,oBAAS,GADf,mBACvByF,EADuB,KACXC,EADW,OAEJ1F,mBAAS,CAACN,QAAS,GAAID,MAAO,KAF1B,mBAEvBQ,EAFuB,KAEhBC,EAFgB,OAGAF,oBAAS,GAHT,mBAGvBxE,EAHuB,KAGdmK,EAHc,OAIF3F,mBAAS,MAJP,mBAIvByB,EAJuB,KAIfC,EAJe,KAKX/D,aAAaC,QAAQ,UAGtCD,aAAaK,QAAQ,QAASP,KAAKQ,UAAUhD,IAG/C,IAAM2K,EAAUnI,KAAKC,MAAMC,aAAaC,QAAQ,UA8B1C0H,EAAS,WACXI,GAAc,GACdC,GAAW,GACXhI,aAAakI,WAAW,UACxB3F,EAAS,CAACR,QAAS,uBAAwBD,MAAO,aAGtD,OAAGgG,EACEjK,EACM,cAAC,EAAD,CAAWgC,MAAOoI,EAAS1J,cAAeoJ,KAEjD3H,aAAaK,QAAQ,cAAeP,KAAKQ,UAAUwD,IAC5C,cAAC,EAAD,CAAiBA,OAAQA,EAAQjE,MAAOoI,EAASlE,UAAWA,EAAW4D,OAAQA,KAGjF,cAAC,EAAD,CAAW1B,aArBN,SAACH,EAAUtI,IAtBF,SAACD,EAAOC,GAC7B,IAAI2K,GAAU,EAkBd,OAhBAF,EAAQhF,SAAQ,SAAA3E,GACXA,EAAKf,QAAUA,GAASe,EAAKd,WAAaA,IACxCc,EAAKT,SACNmK,GAAW,GACXG,GAAU,IAGVH,GAAW,GACXjE,EAAUzF,GACV6J,GAAU,GAEZ5F,EAAS,QAIT4F,GAAS5F,EAAS,CAACR,QAAS,+BAAgCD,MAAO,WAChEqG,GAIFC,CAAetC,EAAUtI,IACxBuK,GAAc,IAmBmBzF,MAAOA,EAAOwF,WAAYA,KCpDxDO,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b79ce02.chunk.js","sourcesContent":["const DATA = [\n    {\n        email: \"admin@admin.com\",\n        password: \"abc123\",\n        fullname: \"Admin Account\",\n        type: \"Savings Peso\",\n        number: \"47290539480\",\n        balance: 1000,\n        isAdmin: true\n    },\n    {\n        email: \"jeff@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Jeffrey de Lara\",\n        type: \"Savings Peso\",\n        number: \"47290539481\",\n        balance: 1029300.43,\n        isAdmin: true\n    },\n    {\n        email: \"jeff2@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Juan dela Cruz\",\n        type: \"Savings Peso\",\n        number: \"47290539482\",\n        balance: 392830.22,\n        isAdmin: false, \n        budget: [\n            {\n                title: \"Tuition fee\",\n                amount: 12000\n            },\n            {\n                title: \"Food take out during the pandemic\",\n                amount: 4000\n            }\n        ]\n    },\n    {\n        email: \"user24@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Peter de Castro\",\n        type: \"Savings Peso\",\n        number: \"47290539483\",\n        balance: 102938.34,\n        isAdmin: false\n    },\n    {\n        email: \"user34@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Noli Enriquez\",\n        type: \"Checking Peso\",\n        number: \"47290539484\",\n        balance: 837495.38, \n        isAdmin: false\n    },\n\n    {\n        email: \"derek@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Karen Davila\",\n        type: \"Checking Peso\",\n        number: \"47290539485\",\n        balance: 574839.58, \n        isAdmin: false\n    }\n];\n\nexport default DATA;\n","import React from \"react\";\n\nexport const Logo = () => {\n    return(\n        <h1 id=\"logo\"><i className='bx bxs-paper-plane' ></i> Avion Bank</h1>\n    )\n}\n","import React from 'react';\nimport { Logo } from './Logo';\n\nexport const Sidebar = (props) => {\n    const { user, logoutHandler, changePage } = props;\n    let menu = null;\n\n    // not regular user but an admin\n    if(!user) {\n        menu = <SideMenu changePage={changePage} logoutHandler={logoutHandler} />;\n    }\n\n    // regular user\n    if(user) {\n        menu = <ClientMenu changePage={changePage} logoutHandler={logoutHandler} />\n    }\n\n    return(\n        <section id=\"side-menu\">\n            <Logo />\n            {menu}\n        </section>\n    )\n}\n\nexport const ClientMenu = (props) => {\n    const {changePage, logoutHandler} = props;\n\n    return (\n        <ul>\n            <SideLink onClickHandler={changePage} page=\"home\" icon=\"bx bx-home\" text=\"Home\" />\n            <SideLink onClickHandler={changePage} page=\"budget\" icon=\"bx bx-money\" text=\"Budget App\" />\n            <SideLink onClickHandler={changePage} page=\"transfer\" icon=\"bx bx-transfer\" text=\"Fund Transfer\" />\n            <SideLink onClickHandler={logoutHandler} icon=\"bx bx-log-out\" text=\"Logout\" />\n        </ul>\n    )\n}\n  \nexport const SideMenu = (props) => {\n    const {changePage, logoutHandler} = props;\n    return (\n        <ul>\n            <SideLink onClickHandler={changePage} page=\"home\" icon=\"bx bx-home\" text=\"Home\" />\n            <SideLink onClickHandler={changePage} page=\"create-account\" icon=\"bx bx-user-pin\" text=\"Create Account\" />\n            <SideLink onClickHandler={changePage} page=\"transfer\" icon=\"bx bx-transfer\" text=\"Fund Transfer\" />\n            <SideLink onClickHandler={changePage} page=\"deposit\" icon=\"bx bx-money\" text=\"Deposit\" />\n            <SideLink onClickHandler={changePage} page=\"withdraw\" icon=\"bx bx-log-out-circle\" text=\"Withdraw\" />\n            <SideLink onClickHandler={logoutHandler} icon=\"bx bx-log-out\" text=\"Logout\" />\n        </ul>\n    )\n}\n  \nexport const SideLink = (props) => {\n    const {icon, text, page} = props;\n    \n    function clickLink(event) {\n        if(page) {\n            event.preventDefault();\n            props.onClickHandler(page);\n        } else {\n            event.preventDefault();\n            props.onClickHandler();\n        }\n    }\n\n    return (\n        <li><a onClick={clickLink} href=\"#\"><i className={icon} ></i> {text}</a></li>\n    )\n}\n","export function formatNumber(number) \n{\n    return number.toLocaleString(undefined, {maximumFractionDigits: 2});\n}\n\nexport function trim(number) {\n    return parseFloat(number.replace(/,/g, '')) || 0;\n}\n\nexport function findAccount(number) {\n    const users = JSON.parse(localStorage.getItem('users'));\n\n    for(const user of users) {\n        if(user.number === number) {\n            return user;\n        }\n    }\n\n    return false;\n}\n\nexport function transact(number, amount, type, setUsers=null)\n{\n    let multiplier = 1;\n    if(type === 'add') multiplier = 1;\n    if(type === 'subtract') multiplier = -1;\n\n    const users = JSON.parse(localStorage.getItem('users'));\n    \n    for(const user of users) {\n        if(user.number === number) {\n            user.balance += amount * multiplier;\n        }\n    }\n    setUsers(users);\n    localStorage.setItem('users', JSON.stringify(users));\n}\n\nexport function capitalize(str) \n{\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function saveBudgetToDB(accountNumber, newBudget) \n{\n    const user = findAccount(accountNumber);\n    user.budget = newBudget;\n    const filteredUsers = addUserToUsers(user);\n    localStorage.setItem('users', JSON.stringify(filteredUsers));\n}\n\nfunction addUserToUsers(user) {\n    const users = JSON.parse(localStorage.getItem('users'));\n\n    const filteredUsers = users.filter(dbUser => {\n        return dbUser.number !== user.number;\n    });\n\n    filteredUsers.push(user);\n    return filteredUsers;\n}\n","import React from \"react\";\nimport { ActionButtons } from \"./ActionButtons\";\nimport { formatNumber } from \"./Utils\";\n\nexport const Account = (props) => {\n    const {type, accountNumber, balance, fullname} = props;\n    \n    return (\n      <div className=\"account\">\n          <div className=\"details\">\n              <AccountHolder fullname={fullname} />\n              <AccountType type={type} />\n              <AccountNumber accountNumber={accountNumber} />\n              {/* <ActionButtons /> */}\n          </div>\n          <AccountBalance balance={formatNumber(balance)} />\n      </div>\n    )\n  }\n  \nexport const AccountHolder = (props) => {\n    return (\n      <h1>{props.fullname}</h1>\n    )\n  }\n  \n  \nexport const AccountType = (props) => {\n    return (\n      <h3>{props.type}</h3>\n    )\n  }\n  \n  \nexport const AccountNumber = (props) => {\n    return (\n      <div>{props.accountNumber}</div>\n    )\n  }\n  \n  \nexport const AccountBalance = (props) => {\n    const balance = props.balance;\n    return (\n      <div className=\"balance\">{balance}</div>\n    )\n  }\n\n","import { Account } from \"./Account\";\n\nexport const MainContent = (props) => {\n    const users = props.users;\n      \n    const bankAccounts = users.map((user, index) => {\n      return <Account key={index} fullname={user.fullname} \n        type={user.type} \n        accountNumber={user.number} \n        balance={user.balance} />\n    });\n      \n    return (\n      <section id=\"main-content\">\n        {bankAccounts}\n      </section>\n    )\n  }\n\n","export const Notif = (props) => {\n    return <div className={`notif ${props.style}`}>{props.message}</div>\n}\n","import { useState } from \"react\";\nimport { Notif } from \"./Notif\";\nimport {formatNumber, trim} from './Utils';\n\nexport const CreateAccountPage = (props) => {\n    const createRandomAccount = () => {\n        return Math.floor(1000000000 + Math.random() * 9000000000);\n    }\n    \n    const [notif, setNotif] = useState({message: 'Create a new client account.', style: 'left'});\n    const [initialBalance, setInitialBalance] = useState(0);\n    const [initialAccountNumber, setInitialAccountNumber] = useState(createRandomAccount());\n\n    const createNewAccount = (user) => {\n        const localUsers = props.users;\n\n        let alreadyExists = false;\n        localUsers.forEach(row => {\n            if(row.email === user.email) {\n                alreadyExists = true;\n            }\n        });\n\n        if(alreadyExists) {\n            setNotif({message: 'This email already exists. Try again.', style: 'danger'});\n            return false;\n        } else {\n            setNotif('');\n            localUsers.unshift(user);\n            props.setUsers(localUsers); \n            localStorage.setItem('users', JSON.stringify(localUsers));\n            setNotif({message: 'Successfully saved.', style: 'success'});\n            return true;\n        }\n    }\n\n    const handleCreateAccount = (event) => {\n        event.preventDefault();\n        const user = event.target.elements;\n\n        const account = {\n            email: user.email.value,\n            password: user.password.value,\n            fullname: user.fullname.value,\n            type: user.accountType.value,\n            number: user.accountNumber.value,\n            isAdmin: false,\n            balance: trim(user.initialBalance.value)\n        }\n\n        const isSaved = createNewAccount(account);\n        if(isSaved) {\n            user.email.value = '';\n            user.password.value = '';\n            user.fullname.value = ''; \n            user.accountNumber.value = setInitialAccountNumber(createRandomAccount());\n            user.initialBalance.value = setInitialBalance(0);\n        }\n    }\n\n    const onInitialBalance = event => {\n        const amount = trim(event.target.value) || 0;\n        setInitialBalance(amount);\n    }\n\n    return (\n        <section id=\"main-content\">\n            <form id=\"form\" onSubmit={handleCreateAccount}>\n                <h1>Create Account</h1>\n                <Notif message={notif.message} style={notif.style} />\n                <label htmlFor=\"fullname\">Full name</label>\n                <input id=\"fullname\" type=\"text\" autoComplete=\"off\" name=\"fullname\" />\n                <hr />\n                <label htmlFor=\"account-number\">Account # (Randomly Generated)</label>\n                <input id=\"account-number\" name=\"accountNumber\" className=\"right\" value={initialAccountNumber} type=\"number\" disabled />\n\n                <label htmlFor=\"balance\">Initial balance</label>\n                <input id=\"balance\" type=\"text\" value={formatNumber(initialBalance)} onChange={onInitialBalance} name=\"initialBalance\" className=\"right\" />\n\n                <label htmlFor=\"account-type\">Account Type</label>\n                <select name=\"accountType\">\n                    <option value=\"Checking Account\">Checking Account</option>\n                    <option value=\"Savings Accounts\">Savings Account</option>\n                </select>\n                <hr />\n                <label htmlFor=\"email\">Email Address</label>\n                <input id=\"email\" type=\"email\" name=\"email\" />\n                <label htmlFor=\"password\">Password</label>\n                <input id=\"password\" type=\"password\" name=\"password\" />\n                <input value=\"Create Account\" className=\"btn\" type=\"submit\" />\n            </form>\n        </section>\n    )\n}\n","import { useState } from \"react\";\nimport { Notif } from \"./Notif\";\nimport { formatNumber } from \"./Utils\";\n\nexport const TransferPage = (props) => {\n    const {isClient, client, setClient} = props;\n    const [users, setUsers] = useState(props.users); \n    const [receivers, setReceivers] = useState(users);\n    const [sender, setSender] = useState( isClient ? client : {balance: 0});\n    const [receiver, setReceiver] = useState({balance: 0});\n    const [notif, setNotif] = useState({message: 'Transfer money from one account to another.', style: 'left'});\n    const [transferAmount, setTransferAmount] = useState(0);\n\n    const senderSelected = (event) => {\n        const accountNumber = event.target.value;\n\n        const newUsers = [];\n        let sender = null; \n\n        users.forEach(user => {\n            if(user.number === accountNumber) {\n                sender = user;        \n            } else {\n                newUsers.push(user);\n            }\n        })\n\n        setSender(sender);\n        setReceivers(newUsers);\n        setReceiver({number: 0, balance: 0});\n    }\n\n    const receiverSelected = event => {\n        const accountNumber = event.target.value;\n\n        let receiver = null;\n\n        users.forEach(user => {\n            if(user.number === accountNumber) {\n                receiver = user;\n            }\n        })\n\n        setReceiver(receiver);\n    }\n\n    let senders = null;\n    if(!isClient) {\n        senders = users.map(user => {\n            return (\n                <option value={user.number}>{user.fullname} #{user.number}</option>\n            )\n        });\n    }\n\n    const newReceivers = receivers.map(receiver => {\n        return (\n            <option value={receiver.number}>{receiver.fullname} #{receiver.number}</option>\n        )\n    })\n\n    const transferFund = event => {\n        event.preventDefault();\n        const amount = parseFloat(event.target.elements.amount.value.replace(/,/g, ''));\n        if(amount <= 0) return false;\n\n        // get localstorage users\n        const users = JSON.parse(localStorage.getItem('users'));\n\n        if(sender.number !== 0 && receiver.number !== 0 && receiver.number) {\n            // deduct from sender\n            let senderSuccess = false;\n            users.forEach(user => {\n                if(user.number === sender.number) {\n                    if(user.balance - amount >= 0) {\n                        user.balance -= amount;\n                        setSender(user);\n                        senderSuccess = true;\n                    }\n                }\n            });\n\n            // add to receiver \n            if(senderSuccess) {\n                users.forEach(user => {\n                    if(user.number === receiver.number) {\n                        user.balance += amount;\n                        setReceiver(user);\n                    }\n                });\n\n                setNotif({ message: 'Successful transfer.', style: 'success' });\n                setUsers(users);\n                props.setUsers(users);\n                localStorage.setItem('users', JSON.stringify(users));\n                setTransferAmount(0);\n            } \n            else {\n                setNotif({message: 'Transfer failed.', style: 'danger'});\n            }\n        }\n        else {\n            setNotif({message: 'Incomplete information. Missing sender or receiver.', style: 'danger' });\n        }\n    }\n\n    const onTransfer = (e) => {\n        const transfer = parseFloat(e.target.value.replace(/,/g, '')) || 0;\n        setTransferAmount(transfer);\n    }\n\n    let senderField = \n        <select onChange={senderSelected} name=\"sender\">\n            <option>Select Sender</option>\n            {senders}\n        </select>;\n    \n    if(isClient) {\n        senderField = <input type=\"text\" name=\"sender\" value={`${client.fullname} #${client.number}`} disabled />\n    }\n\n    return (\n        <section id=\"main-content\">\n            <form id=\"form\" onSubmit={transferFund}>\n                <h1>Fund Transfer</h1>\n                \n                <Notif message={notif.message} style={notif.style} />\n                <h2>Sender</h2>\n                <label>From (Sender)</label>\n                {senderField}\n\n                <label>Current balance</label>\n                <input type=\"text\" className=\"right\" value={formatNumber(sender.balance)} disabled />\n\n                <label>Amount to Transfer</label>\n                <input type=\"text\" name=\"amount\" value={formatNumber(transferAmount)} onChange={onTransfer} autoComplete=\"off\" className=\"right big-input\" />\n\n                <div className=\"transfer-icon\"><i className='bx bx-down-arrow-alt'></i></div>\n                <h2>Receiver</h2>\n                <label>To (Receiver)</label>\n                <select value={receiver.number || 0} onChange={receiverSelected} name=\"receiver\">\n                    <option>Select Receiver</option>\n                    {newReceivers}\n                </select>\n                <label>Current balance</label>\n                <input type=\"text\" className=\"right\" value={formatNumber(receiver.balance)} disabled />\n                <input type=\"submit\" className=\"btn\" value=\"Transfer Fund\" />\n            </form>\n        </section>\n    )\n}\n","import { useState } from \"react\";\nimport { Notif } from \"./Notif\";\nimport { formatNumber, findAccount, transact, trim, capitalize } from \"./Utils\";\n\nexport const TransactPage = (props) => {\n    const users = JSON.parse(localStorage.getItem('users'));\n    const setNotif = props.setNotif;\n    const notif = props.notif;\n    const [accounts, setAccounts] = useState(users);\n    const [selectedAccount, setSelectedAccount] = useState({balance: 0});\n    const [depositAmount, setDepositAmount] = useState(0);\n\n    const options = accounts.map(user => {\n        return <option value={user.number}>{user.fullname} #{user.number}</option>\n    });\n\n    const displayBalance = (e) => {\n        setNotif(notif);\n        const selectedNumber = e.target.value;\n        \n        for(const user of accounts) {\n            if(user.number === selectedNumber) {\n                setSelectedAccount(user);\n                break;\n            }\n        }\n    }\n\n    const onDeposit = (e) => {\n        const amount = formatNumber(trim(e.target.value));\n        setDepositAmount(amount);\n    }\n\n    const processTransfer = (e) => {\n        e.preventDefault();\n        const amount = trim(e.target.elements.amount.value);\n        const accountNumber = e.target.elements.account.value;\n\n        if(amount > 0 && accountNumber !== \"0\") {\n            for(const user of accounts) {\n                if(user.number === accountNumber) {\n                    transact(user.number, amount, props.type, props.setUsers);\n                    setSelectedAccount(findAccount(user.number));\n                    setAccounts(JSON.parse(localStorage.getItem('users')));\n                    setDepositAmount(0);\n                    setNotif({message: `${capitalize(props.page)} successful.`, style: 'success'});\n                    break;\n                }\n            }\n        } \n        else {\n            setNotif({message: `${capitalize(props.page)} failed.`, style: 'danger'});\n        }\n    }\n    // 'bx bx-up-arrow-alt'\n    const icon = props.page === 'withdraw' ? 'bx bx-down-arrow-alt' : 'bx bx-up-arrow-alt';\n\n    return (\n        <section id=\"main-content\">\n            <form id=\"form\" onSubmit={processTransfer}>\n                <h1>{props.page}</h1>\n                <Notif message={notif.message} style={notif.style} />\n                <label>Account</label>\n                <select name=\"account\" onChange={displayBalance}>\n                    <option value=\"0\">Select Account</option>\n                    {options}\n                </select>\n\n                <label>Current balance</label>\n                <input type=\"text\" className=\"right\" value={formatNumber(selectedAccount.balance)} disabled />\n                \n                <div className=\"transfer-icon\"><i className={icon}></i></div>\n                <label>Amount to {props.page}</label>\n                <input type=\"text\" name=\"amount\" value={depositAmount} onChange={onDeposit} autoComplete=\"off\" className=\"right big-input\" />\n                <button type=\"submit\" className=\"btn\">{props.page}</button>\n            </form>\n        </section>\n    )\n}\n","import { useState } from \"react\";\nimport { Sidebar } from \"./Sidebar\";\nimport { MainContent } from \"./MainContent\";\nimport { CreateAccountPage } from \"./CreateAccountPage\";\nimport { TransferPage } from \"./TransferPage\";\nimport { TransactPage } from \"./TransactPage\";\n\nexport const Dashboard = (props) => {\n    const [page, setPage] = useState('home');\n    const [users, setUsers] = useState(props.users);\n    const [notif, setNotif] = useState({message: '', style: ''});\n\n    const changePageHandler = (pageName) => {\n        setPage(pageName);\n\n        if(pageName === 'withdraw') {\n            setNotif({message: 'Select an account to withdraw money from.', style: 'left'});\n        } \n\n        if(pageName === 'deposit') {\n            setNotif({message: 'Select an account to deposit money.', style: 'left'});\n        }\n        \n    }\n\n    if(page === 'home') {\n        return (\n            <main>\n              <Sidebar changePage={changePageHandler} logoutHandler={props.logoutHandler} />\n              <MainContent users={users} />\n            </main>\n        )\n    }\n\n    if(page === 'create-account') {\n        return (\n            <main>\n              <Sidebar changePage={changePageHandler} logoutHandler={props.logoutHandler} />\n              <CreateAccountPage users={users} setUsers={setUsers} />\n            </main>\n        )\n    }\n\n    if(page === 'transfer') {\n        return (\n            <main>\n                <Sidebar changePage={changePageHandler} logoutHandler={props.logoutHandler} />\n                <TransferPage users={users} setUsers={setUsers} />\n            </main>\n        )\n    }\n\n    if(page === 'deposit') {\n        return (\n            <main>\n                <Sidebar changePage={changePageHandler} logoutHandler={props.logoutHandler} />\n                <TransactPage users={users} setUsers={setUsers} notif={notif} setNotif={setNotif} type=\"add\" page={page} />\n            </main>\n        )\n    }\n\n    if(page === 'withdraw') {\n        return (\n            <main>\n                <Sidebar changePage={changePageHandler} logoutHandler={props.logoutHandler} />\n                <TransactPage users={users} setUsers={setUsers} notif={notif} setNotif={setNotif} type=\"subtract\" page={page} />\n            </main>\n        )\n    }\n}\n","import React, { useState } from 'react';\nimport { Logo } from './Logo';\nimport { Notif } from './Notif';\n\nexport const LoginPage = (props) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n  \n    const onSubmitHandler = (event) => {\n      event.preventDefault();\n      props.loginHandler(username, password);\n    }\n  \n    const onChangeUsername = (event) => {\n      setUsername(event.target.value);\n    }\n  \n    const onChangePassword = (event) => {\n      setPassword(event.target.value);\n    }\n  \n    return (\n      <div id=\"login-page\">\n        <div id=\"login\">\n          <Logo />\n          <Notif message={props.notif.message} style={props.notif.style} />\n          <form onSubmit={onSubmitHandler}>\n            <label htmlFor=\"username\">Username</label>\n            <input id=\"username\" autoComplete=\"off\" onChange={onChangeUsername}  value={username} type=\"text\" />\n            <label htmlFor=\"password\">Password</label>\n            <input id=\"password\" autoComplete=\"off\" onChange={onChangePassword} value={password} type=\"password\" />\n            <button type=\"submit\" className=\"btn\">Login</button>\n          </form>\n        </div>\n      </div>\n    )\n}\n","import { Account } from './Account';\n\nexport const MainClientContent = props => {\n    const {user} = props;\n  \n    return (\n      <section id=\"main-content\">\n        <h1 className=\"main\">My Account</h1>\n        <Account type={user.type} accountNumber={user.number} balance={user.balance} fullname={user.fullname} />\n      </section>\n    )\n}\n","import { formatNumber, saveBudgetToDB } from \"./Utils\";\nimport React, {useState} from \"react\";\n\nexport const BudgetApp = (props) => {\n    const {client} = props;\n    const [budgetList, setBudgetList] = useState(client.budget || []);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const balanceWithBudget = budgetList.reduce((prev, curr) => {\n        return prev + curr.amount\n    }, 0);\n    \n    const [currentBalance, setCurrentBalance] = useState(client.balance - balanceWithBudget);\n\n    const addBudget = (e) => {\n        e.preventDefault();\n        setIsModalOpen(true);\n    }\n\n    const saveBudget = (amount, title) => {\n        amount = parseFloat(amount);\n        if(amount > 0) {\n            // deduct current balance\n            setCurrentBalance(currentBalance - amount);\n            // add this budget to budgetList\n            const newBudgetList = [{title: title, amount: amount}, ...budgetList];\n            setBudgetList(newBudgetList);\n            // close\n            setIsModalOpen(false);\n            // save into localStorage this new budget\n            saveBudgetToDB(client.number, newBudgetList);\n        }\n    }\n\n    const editRow = (e) => {\n        console.log('Edit', e);\n    }\n\n    const deleteRow = (index) => {\n        console.log('Delete', index);\n        // get all budgetlist except the index\n        const filteredBudget = budgetList.filter((item, budgetIndex) => {\n            return  index !== budgetIndex;\n        })\n        // add currentBalance by amount\n        console.log(currentBalance, budgetList[index].amount);\n        setCurrentBalance(currentBalance + budgetList[index].amount);\n        // set budgetlist\n        setBudgetList(filteredBudget);\n        // save budget to localhost\n        saveBudgetToDB(client.number, filteredBudget);\n    }\n\n    const modal = isModalOpen ? <BudgetModal \n                  title=\"Add a budget\" \n                  setIsModalOpen={setIsModalOpen}\n                  saveBudget={saveBudget} /> : '';\n\n\n    const budget = budgetList.map((item, index) => {\n        const style = index % 2 === 0 ? 'even' : 'odd';\n        return (\n            <div className={`budget-row ${style}`}>\n                <div className=\"budget-title\">\n                    <button type=\"button\" onClick={() => deleteRow(index)} className=\"mr\"><i class='bx bxs-x-square' ></i></button>\n                    <button type=\"button\" onClick={() => editRow(index)} className=\"mr\"><i class='bx bx-edit-alt' ></i></button>\n                    {item.title}\n                </div>\n                <div>{formatNumber(item.amount)}</div>\n            </div>\n        )\n    })\n\n    return (\n        <div id=\"main-content\">\n            <form id=\"form\" className=\"budget\">\n                <h1>Budget App</h1>\n                <div>Start budgeting your money with our built in app.</div>\n\n                <div id=\"budget\">\n                    <div className=\"budget-menu\">\n                        <div>\n                            <button className=\"btn2\" onClick={addBudget}><i className='bx bx-book-add'></i> Add budget</button>\n                        </div>\n                        <div>\n                          <label>Remaining Budget</label>\n                          <h1>{formatNumber(currentBalance)}</h1>\n                        </div>\n                    </div>\n\n                    <div className=\"budget-body\">\n                        {budget}\n                    </div>\n                </div>\n            </form>\n            {modal}\n        </div>\n    )\n}\n\nconst BudgetModal = (props) => {\n    const {title, saveBudget, setIsModalOpen} = props;\n    const onSubmit = (e) => {\n        e.preventDefault();\n        saveBudget(e.target.elements.amount.value, e.target.elements.description.value);\n    }\n    return (<div className=\"overlay\">\n        <div className=\"modal\">\n            <form onSubmit={onSubmit}>\n                <h2>{title}</h2>\n                <label>description</label>\n                <textarea name=\"description\"></textarea>\n                <label>Amount</label>\n                <input type=\"number\" name=\"amount\" autoComplete=\"off\" />\n                <button type=\"button\" onClick={() => setIsModalOpen(false)} className=\"btn2 btn-muted\">Cancel</button>\n                <button type=\"submit\" className=\"btn2\">Submit</button>\n            </form>\n        </div>\n    </div>\n    )\n}\n","import React, {useState} from 'react';\nimport { Sidebar } from './Sidebar';\nimport { MainClientContent } from './MainClientContent';\nimport { findAccount } from './Utils';\nimport { TransferPage } from './TransferPage';\nimport { BudgetApp } from './BudgetApp';\n\nexport const ClientDashboard = (props) => {\n    const { logout, client, setClient } = props;\n    const [users, setUsers] = useState(props.users);\n    const [ page, setPage ] = useState('home');\n\n  \n    const changePageHandler = (pageName) => {\n      setPage(pageName);\n      const currentUser = findAccount(client.number);\n      setClient(currentUser);\n    }\n  \n    if(page === 'home') {\n      \n      return (\n        <main>\n          <Sidebar changePage={changePageHandler} user={client} logoutHandler={props.logout} />\n          <MainClientContent user={client} />\n        </main>\n      )\n    }\n  \n    if(page === 'budget') {\n      return (\n        <main>\n          <Sidebar changePage={changePageHandler} user={client} logoutHandler={props.logout} />\n          <BudgetApp client={client} />\n        </main>\n      )\n    }\n  \n    if(page === 'transfer') {\n      return (\n        <main>\n          <Sidebar changePage={changePageHandler} user={client} logoutHandler={props.logout} />\n          <TransferPage isClient=\"true\" client={client} setClient={setClient} users={users} setUsers={setUsers}  />\n        </main>\n      )\n    }\n}\n","import React, {useState} from 'react';\nimport DATA from '../data';\nimport { Dashboard } from './Dashboard';\nimport { LoginPage } from './LoginPage';\nimport { ClientDashboard } from './ClientDashboard';\n\nexport const Authenticate = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [notif, setNotif] = useState({message: '', style: ''});\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [client, setClient] = useState(null);\n    const localUsers = localStorage.getItem('users');\n    \n    if(!localUsers) {\n      localStorage.setItem('users', JSON.stringify(DATA));\n    }\n\n    const clients = JSON.parse(localStorage.getItem('users'));\n\n    const isLoginSuccess = (email, password) => {\n      let isFound = false;\n\n      clients.forEach(user => {\n        if(user.email === email && user.password === password) {\n          if(user.isAdmin) {\n            setIsAdmin(true);\n            isFound = true;\n          }\n          else {\n            setIsAdmin(false);\n            setClient(user)\n            isFound = true;\n          }\n          setNotif('');\n        }\n      });\n  \n      if(!isFound) setNotif({message: 'Wrong username and password.', style: 'danger'});\n      return isFound;\n    }\n  \n    const login = (username, password) => {\n        if(isLoginSuccess(username, password)) {\n            setIsLoggedIn(true);\n        }\n    }\n  \n    const logout = () => {\n        setIsLoggedIn(false);\n        setIsAdmin(false);\n        localStorage.removeItem('client')\n        setNotif({message: 'You have logged out.', style: 'success'});\n    }\n  \n    if(isLoggedIn) {\n      if(isAdmin) {\n        return <Dashboard users={clients} logoutHandler={logout} />\n      } else {\n        localStorage.setItem('currentUser', JSON.stringify(client));\n        return <ClientDashboard client={client} users={clients} setClient={setClient} logout={logout} />\n      }\n    } else {\n      return <LoginPage loginHandler={login} notif={notif} isLoggedIn={isLoggedIn} />\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { Authenticate } from './components/Authenticate';\n\nfunction App() {\n  return (\n    <Authenticate />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}